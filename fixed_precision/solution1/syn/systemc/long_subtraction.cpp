// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "long_subtraction.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic long_subtraction::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic long_subtraction::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> long_subtraction::ap_ST_fsm_state1 = "1";
const sc_lv<3> long_subtraction::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> long_subtraction::ap_ST_fsm_state9 = "100";
const sc_lv<32> long_subtraction::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool long_subtraction::ap_const_boolean_1 = true;
const sc_lv<32> long_subtraction::ap_const_lv32_1 = "1";
const bool long_subtraction::ap_const_boolean_0 = false;
const sc_lv<1> long_subtraction::ap_const_lv1_1 = "1";
const sc_lv<1> long_subtraction::ap_const_lv1_0 = "0";
const sc_lv<112> long_subtraction::ap_const_lv112_0 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<229> long_subtraction::ap_const_lv229_lc_1 = "1001101000100000100110101000010011111011110011111111100000000000000000000000000000000000000000000000";
const sc_lv<32> long_subtraction::ap_const_lv32_70 = "1110000";
const sc_lv<32> long_subtraction::ap_const_lv32_E4 = "11100100";
const sc_lv<117> long_subtraction::ap_const_lv117_0 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<118> long_subtraction::ap_const_lv118_0 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> long_subtraction::ap_const_lv32_40 = "1000000";
const sc_lv<32> long_subtraction::ap_const_lv32_75 = "1110101";
const sc_lv<54> long_subtraction::ap_const_lv54_0 = "000000000000000000000000000000000000000000000000000000";
const sc_lv<32> long_subtraction::ap_const_lv32_80 = "10000000";
const sc_lv<32> long_subtraction::ap_const_lv32_FFFFFFF5 = "11111111111111111111111111110101";
const sc_lv<32> long_subtraction::ap_const_lv32_1F = "11111";
const sc_lv<31> long_subtraction::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<8> long_subtraction::ap_const_lv8_8C = "10001100";
const sc_lv<128> long_subtraction::ap_const_lv128_lc_2 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<128> long_subtraction::ap_const_lv128_lc_3 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<15> long_subtraction::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> long_subtraction::ap_const_lv32_FFFFFFF4 = "11111111111111111111111111110100";
const sc_lv<32> long_subtraction::ap_const_lv32_C = "1100";
const sc_lv<32> long_subtraction::ap_const_lv32_F = "1111";
const sc_lv<5> long_subtraction::ap_const_lv5_F = "1111";
const sc_lv<5> long_subtraction::ap_const_lv5_E = "1110";
const sc_lv<5> long_subtraction::ap_const_lv5_10 = "10000";
const sc_lv<32> long_subtraction::ap_const_lv32_A = "1010";
const sc_lv<16> long_subtraction::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> long_subtraction::ap_const_lv32_2 = "10";

long_subtraction::long_subtraction(sc_module_name name) : sc_module(name), mVcdFile(0) {
    long_subtraction_bkb_U1 = new long_subtraction_bkb<1,2,101,129,229>("long_subtraction_bkb_U1");
    long_subtraction_bkb_U1->clk(ap_clk);
    long_subtraction_bkb_U1->reset(ap_rst);
    long_subtraction_bkb_U1->din0(grp_fu_188_p0);
    long_subtraction_bkb_U1->din1(ret_V_reg_539);
    long_subtraction_bkb_U1->ce(grp_fu_188_ce);
    long_subtraction_bkb_U1->dout(grp_fu_188_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_NZeros_fu_281_p2);
    sensitive << ( trunc_ln1074_reg_571 );
    sensitive << ( trunc_ln1083_reg_582 );

    SC_METHOD(thread_a_V_blk_n);
    sensitive << ( a_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_120_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_128_p3 );

    SC_METHOD(thread_a_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op22_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_a_fu_356_p2);
    sensitive << ( icmp_ln994_fu_323_p2 );
    sensitive << ( icmp_ln994_1_fu_350_p2 );

    SC_METHOD(thread_add_ln1001_fu_410_p2);
    sensitive << ( sub_ln991_reg_587 );

    SC_METHOD(thread_add_ln1011_fu_495_p2);
    sensitive << ( sub_ln1011_fu_490_p2 );
    sensitive << ( select_ln1011_fu_483_p3 );

    SC_METHOD(thread_and_ln996_fu_384_p2);
    sensitive << ( p_Result_1_fu_376_p3 );
    sensitive << ( xor_ln996_fu_370_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( a_V_empty_n );
    sensitive << ( b_V_empty_n );
    sensitive << ( c_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_1_reg_535_pp0_iter5_reg );
    sensitive << ( ap_predicate_op22_read_state2 );
    sensitive << ( ap_predicate_op24_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( a_V_empty_n );
    sensitive << ( b_V_empty_n );
    sensitive << ( c_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_1_reg_535_pp0_iter5_reg );
    sensitive << ( ap_predicate_op22_read_state2 );
    sensitive << ( ap_predicate_op24_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( a_V_empty_n );
    sensitive << ( b_V_empty_n );
    sensitive << ( c_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_1_reg_535_pp0_iter5_reg );
    sensitive << ( ap_predicate_op22_read_state2 );
    sensitive << ( ap_predicate_op24_read_state2 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( a_V_empty_n );
    sensitive << ( b_V_empty_n );
    sensitive << ( ap_predicate_op22_read_state2 );
    sensitive << ( ap_predicate_op24_read_state2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);
    sensitive << ( c_V_full_n );
    sensitive << ( tmp_1_reg_535_pp0_iter5_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( ap_predicate_tran2to9_state2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_predicate_op22_read_state2);
    sensitive << ( tmp_nbreadreq_fu_120_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_128_p3 );

    SC_METHOD(thread_ap_predicate_op24_read_state2);
    sensitive << ( tmp_nbreadreq_fu_120_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_128_p3 );

    SC_METHOD(thread_ap_predicate_tran2to9_state2);
    sensitive << ( tmp_nbreadreq_fu_120_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_128_p3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_b_V_blk_n);
    sensitive << ( b_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_120_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_128_p3 );

    SC_METHOD(thread_b_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op24_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_bitcast_ln750_fu_520_p1);
    sensitive << ( p_Result_4_fu_508_p5 );

    SC_METHOD(thread_c_V_blk_n);
    sensitive << ( c_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_1_reg_535_pp0_iter5_reg );

    SC_METHOD(thread_c_V_din);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_1_reg_535_pp0_iter5_reg );
    sensitive << ( icmp_ln982_reg_561_pp0_iter5_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( bitcast_ln750_fu_520_p1 );

    SC_METHOD(thread_c_V_write);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_1_reg_535_pp0_iter5_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_d_V_fu_155_p3);
    sensitive << ( a_V_dout );

    SC_METHOD(thread_e_V_fu_163_p3);
    sensitive << ( b_V_dout );

    SC_METHOD(thread_grp_fu_188_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_188_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_icmp_ln1001_fu_404_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_1_reg_535_pp0_iter4_reg );
    sensitive << ( icmp_ln982_reg_561_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( lsb_index_fu_308_p2 );

    SC_METHOD(thread_icmp_ln1075_fu_259_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_1_reg_535_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_8_fu_233_p4 );

    SC_METHOD(thread_icmp_ln982_fu_215_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_1_reg_535_pp0_iter2_reg );
    sensitive << ( trunc_ln_reg_549 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_icmp_ln994_1_fu_350_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_1_reg_535_pp0_iter4_reg );
    sensitive << ( icmp_ln982_reg_561_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( p_Result_s_fu_344_p2 );

    SC_METHOD(thread_icmp_ln994_fu_323_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_1_reg_535_pp0_iter4_reg );
    sensitive << ( icmp_ln982_reg_561_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_9_fu_313_p4 );

    SC_METHOD(thread_l_fu_285_p3);
    sensitive << ( trunc_ln1074_reg_571 );
    sensitive << ( icmp_ln1075_reg_577 );
    sensitive << ( NZeros_fu_281_p2 );

    SC_METHOD(thread_lhs_V_fu_171_p1);
    sensitive << ( d_V_fu_155_p3 );

    SC_METHOD(thread_lsb_index_fu_308_p2);
    sensitive << ( sub_ln991_reg_587 );

    SC_METHOD(thread_lshr_ln1001_fu_419_p2);
    sensitive << ( sext_ln985_fu_305_p1 );
    sensitive << ( zext_ln1001_fu_415_p1 );

    SC_METHOD(thread_lshr_ln994_fu_338_p2);
    sensitive << ( zext_ln994_fu_334_p1 );

    SC_METHOD(thread_m_1_fu_456_p2);
    sensitive << ( or_ln_fu_396_p3 );
    sensitive << ( m_fu_448_p3 );

    SC_METHOD(thread_m_5_fu_480_p1);
    sensitive << ( m_4_reg_604 );

    SC_METHOD(thread_m_fu_448_p3);
    sensitive << ( icmp_ln1001_fu_404_p2 );
    sensitive << ( trunc_ln1001_fu_440_p1 );
    sensitive << ( trunc_ln1001_1_fu_444_p1 );

    SC_METHOD(thread_or_ln1008_fu_390_p2);
    sensitive << ( and_ln996_fu_384_p2 );
    sensitive << ( a_fu_356_p2 );

    SC_METHOD(thread_or_ln_fu_396_p3);
    sensitive << ( or_ln1008_fu_390_p2 );

    SC_METHOD(thread_p_Result_1_fu_376_p3);
    sensitive << ( lsb_index_fu_308_p2 );
    sensitive << ( sext_ln985_fu_305_p1 );

    SC_METHOD(thread_p_Result_4_fu_508_p5);
    sensitive << ( m_5_fu_480_p1 );
    sensitive << ( tmp_4_fu_501_p3 );

    SC_METHOD(thread_p_Result_s_fu_344_p2);
    sensitive << ( sext_ln985_fu_305_p1 );
    sensitive << ( lshr_ln994_fu_338_p2 );

    SC_METHOD(thread_ret_V_fu_179_p2);
    sensitive << ( lhs_V_fu_171_p1 );
    sensitive << ( rhs_V_fu_175_p1 );

    SC_METHOD(thread_rhs_V_fu_175_p1);
    sensitive << ( e_V_fu_163_p3 );

    SC_METHOD(thread_select_ln1011_fu_483_p3);
    sensitive << ( tmp_12_reg_609 );

    SC_METHOD(thread_sext_ln1073_fu_243_p1);
    sensitive << ( tmp_8_fu_233_p4 );

    SC_METHOD(thread_sext_ln985_fu_305_p1);
    sensitive << ( tmp_V_4_reg_566_pp0_iter4_reg );

    SC_METHOD(thread_sext_ln988_fu_212_p1);
    sensitive << ( trunc_ln_reg_549 );

    SC_METHOD(thread_shl_ln1001_fu_434_p2);
    sensitive << ( sext_ln985_fu_305_p1 );
    sensitive << ( zext_ln1001_1_fu_430_p1 );

    SC_METHOD(thread_sub_ln1001_fu_425_p2);
    sensitive << ( sub_ln991_reg_587 );

    SC_METHOD(thread_sub_ln1011_fu_490_p2);
    sensitive << ( trunc_ln990_reg_599_pp0_iter5_reg );

    SC_METHOD(thread_sub_ln991_fu_291_p2);
    sensitive << ( l_fu_285_p3 );

    SC_METHOD(thread_sub_ln994_fu_329_p2);
    sensitive << ( trunc_ln994_reg_594 );

    SC_METHOD(thread_tmp_10_fu_362_p3);
    sensitive << ( lsb_index_fu_308_p2 );

    SC_METHOD(thread_tmp_1_nbreadreq_fu_128_p3);
    sensitive << ( b_V_empty_n );

    SC_METHOD(thread_tmp_4_fu_501_p3);
    sensitive << ( p_Result_3_reg_555_pp0_iter5_reg );
    sensitive << ( add_ln1011_fu_495_p2 );

    SC_METHOD(thread_tmp_5_fu_269_p3);
    sensitive << ( x_V_fu_265_p1 );

    SC_METHOD(thread_tmp_8_fu_233_p4);
    sensitive << ( tmp_V_4_fu_226_p3 );

    SC_METHOD(thread_tmp_9_fu_313_p4);
    sensitive << ( lsb_index_fu_308_p2 );

    SC_METHOD(thread_tmp_V_4_fu_226_p3);
    sensitive << ( p_Result_3_reg_555 );
    sensitive << ( sext_ln988_fu_212_p1 );
    sensitive << ( tmp_V_fu_220_p2 );

    SC_METHOD(thread_tmp_V_fu_220_p2);
    sensitive << ( sext_ln988_fu_212_p1 );

    SC_METHOD(thread_tmp_nbreadreq_fu_120_p3);
    sensitive << ( a_V_empty_n );

    SC_METHOD(thread_tmp_s_fu_247_p3);
    sensitive << ( sext_ln1073_fu_243_p1 );

    SC_METHOD(thread_trunc_ln1001_1_fu_444_p1);
    sensitive << ( shl_ln1001_fu_434_p2 );

    SC_METHOD(thread_trunc_ln1001_fu_440_p1);
    sensitive << ( lshr_ln1001_fu_419_p2 );

    SC_METHOD(thread_trunc_ln1074_fu_255_p1);
    sensitive << ( tmp_s_fu_247_p3 );

    SC_METHOD(thread_trunc_ln1083_fu_277_p1);
    sensitive << ( tmp_5_fu_269_p3 );

    SC_METHOD(thread_trunc_ln990_fu_301_p1);
    sensitive << ( l_fu_285_p3 );

    SC_METHOD(thread_trunc_ln994_fu_297_p1);
    sensitive << ( sub_ln991_fu_291_p2 );

    SC_METHOD(thread_x_V_fu_265_p1);
    sensitive << ( tmp_V_4_fu_226_p3 );

    SC_METHOD(thread_xor_ln996_fu_370_p2);
    sensitive << ( tmp_10_fu_362_p3 );

    SC_METHOD(thread_zext_ln1001_1_fu_430_p1);
    sensitive << ( sub_ln1001_fu_425_p2 );

    SC_METHOD(thread_zext_ln1001_fu_415_p1);
    sensitive << ( add_ln1001_fu_410_p2 );

    SC_METHOD(thread_zext_ln994_fu_334_p1);
    sensitive << ( sub_ln994_fu_329_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_predicate_tran2to9_state2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "long_subtraction_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_V_dout, "(port)a_V_dout");
    sc_trace(mVcdFile, a_V_empty_n, "(port)a_V_empty_n");
    sc_trace(mVcdFile, a_V_read, "(port)a_V_read");
    sc_trace(mVcdFile, b_V_dout, "(port)b_V_dout");
    sc_trace(mVcdFile, b_V_empty_n, "(port)b_V_empty_n");
    sc_trace(mVcdFile, b_V_read, "(port)b_V_read");
    sc_trace(mVcdFile, c_V_din, "(port)c_V_din");
    sc_trace(mVcdFile, c_V_full_n, "(port)c_V_full_n");
    sc_trace(mVcdFile, c_V_write, "(port)c_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, a_V_blk_n, "a_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_120_p3, "tmp_nbreadreq_fu_120_p3");
    sc_trace(mVcdFile, tmp_1_nbreadreq_fu_128_p3, "tmp_1_nbreadreq_fu_128_p3");
    sc_trace(mVcdFile, b_V_blk_n, "b_V_blk_n");
    sc_trace(mVcdFile, c_V_blk_n, "c_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, tmp_1_reg_535, "tmp_1_reg_535");
    sc_trace(mVcdFile, tmp_1_reg_535_pp0_iter5_reg, "tmp_1_reg_535_pp0_iter5_reg");
    sc_trace(mVcdFile, ap_predicate_op22_read_state2, "ap_predicate_op22_read_state2");
    sc_trace(mVcdFile, ap_predicate_op24_read_state2, "ap_predicate_op24_read_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_1_reg_535_pp0_iter1_reg, "tmp_1_reg_535_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_1_reg_535_pp0_iter2_reg, "tmp_1_reg_535_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_1_reg_535_pp0_iter3_reg, "tmp_1_reg_535_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_1_reg_535_pp0_iter4_reg, "tmp_1_reg_535_pp0_iter4_reg");
    sc_trace(mVcdFile, ret_V_fu_179_p2, "ret_V_fu_179_p2");
    sc_trace(mVcdFile, ret_V_reg_539, "ret_V_reg_539");
    sc_trace(mVcdFile, trunc_ln_reg_549, "trunc_ln_reg_549");
    sc_trace(mVcdFile, p_Result_3_reg_555, "p_Result_3_reg_555");
    sc_trace(mVcdFile, p_Result_3_reg_555_pp0_iter3_reg, "p_Result_3_reg_555_pp0_iter3_reg");
    sc_trace(mVcdFile, p_Result_3_reg_555_pp0_iter4_reg, "p_Result_3_reg_555_pp0_iter4_reg");
    sc_trace(mVcdFile, p_Result_3_reg_555_pp0_iter5_reg, "p_Result_3_reg_555_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln982_fu_215_p2, "icmp_ln982_fu_215_p2");
    sc_trace(mVcdFile, icmp_ln982_reg_561, "icmp_ln982_reg_561");
    sc_trace(mVcdFile, icmp_ln982_reg_561_pp0_iter4_reg, "icmp_ln982_reg_561_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln982_reg_561_pp0_iter5_reg, "icmp_ln982_reg_561_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_V_4_fu_226_p3, "tmp_V_4_fu_226_p3");
    sc_trace(mVcdFile, tmp_V_4_reg_566, "tmp_V_4_reg_566");
    sc_trace(mVcdFile, tmp_V_4_reg_566_pp0_iter4_reg, "tmp_V_4_reg_566_pp0_iter4_reg");
    sc_trace(mVcdFile, trunc_ln1074_fu_255_p1, "trunc_ln1074_fu_255_p1");
    sc_trace(mVcdFile, trunc_ln1074_reg_571, "trunc_ln1074_reg_571");
    sc_trace(mVcdFile, icmp_ln1075_fu_259_p2, "icmp_ln1075_fu_259_p2");
    sc_trace(mVcdFile, icmp_ln1075_reg_577, "icmp_ln1075_reg_577");
    sc_trace(mVcdFile, trunc_ln1083_fu_277_p1, "trunc_ln1083_fu_277_p1");
    sc_trace(mVcdFile, trunc_ln1083_reg_582, "trunc_ln1083_reg_582");
    sc_trace(mVcdFile, sub_ln991_fu_291_p2, "sub_ln991_fu_291_p2");
    sc_trace(mVcdFile, sub_ln991_reg_587, "sub_ln991_reg_587");
    sc_trace(mVcdFile, trunc_ln994_fu_297_p1, "trunc_ln994_fu_297_p1");
    sc_trace(mVcdFile, trunc_ln994_reg_594, "trunc_ln994_reg_594");
    sc_trace(mVcdFile, trunc_ln990_fu_301_p1, "trunc_ln990_fu_301_p1");
    sc_trace(mVcdFile, trunc_ln990_reg_599, "trunc_ln990_reg_599");
    sc_trace(mVcdFile, trunc_ln990_reg_599_pp0_iter5_reg, "trunc_ln990_reg_599_pp0_iter5_reg");
    sc_trace(mVcdFile, m_4_reg_604, "m_4_reg_604");
    sc_trace(mVcdFile, tmp_12_reg_609, "tmp_12_reg_609");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_predicate_tran2to9_state2, "ap_predicate_tran2to9_state2");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, d_V_fu_155_p3, "d_V_fu_155_p3");
    sc_trace(mVcdFile, e_V_fu_163_p3, "e_V_fu_163_p3");
    sc_trace(mVcdFile, lhs_V_fu_171_p1, "lhs_V_fu_171_p1");
    sc_trace(mVcdFile, rhs_V_fu_175_p1, "rhs_V_fu_175_p1");
    sc_trace(mVcdFile, grp_fu_188_p0, "grp_fu_188_p0");
    sc_trace(mVcdFile, grp_fu_188_p2, "grp_fu_188_p2");
    sc_trace(mVcdFile, sext_ln988_fu_212_p1, "sext_ln988_fu_212_p1");
    sc_trace(mVcdFile, tmp_V_fu_220_p2, "tmp_V_fu_220_p2");
    sc_trace(mVcdFile, tmp_8_fu_233_p4, "tmp_8_fu_233_p4");
    sc_trace(mVcdFile, sext_ln1073_fu_243_p1, "sext_ln1073_fu_243_p1");
    sc_trace(mVcdFile, tmp_s_fu_247_p3, "tmp_s_fu_247_p3");
    sc_trace(mVcdFile, x_V_fu_265_p1, "x_V_fu_265_p1");
    sc_trace(mVcdFile, tmp_5_fu_269_p3, "tmp_5_fu_269_p3");
    sc_trace(mVcdFile, NZeros_fu_281_p2, "NZeros_fu_281_p2");
    sc_trace(mVcdFile, l_fu_285_p3, "l_fu_285_p3");
    sc_trace(mVcdFile, lsb_index_fu_308_p2, "lsb_index_fu_308_p2");
    sc_trace(mVcdFile, tmp_9_fu_313_p4, "tmp_9_fu_313_p4");
    sc_trace(mVcdFile, sub_ln994_fu_329_p2, "sub_ln994_fu_329_p2");
    sc_trace(mVcdFile, zext_ln994_fu_334_p1, "zext_ln994_fu_334_p1");
    sc_trace(mVcdFile, sext_ln985_fu_305_p1, "sext_ln985_fu_305_p1");
    sc_trace(mVcdFile, lshr_ln994_fu_338_p2, "lshr_ln994_fu_338_p2");
    sc_trace(mVcdFile, p_Result_s_fu_344_p2, "p_Result_s_fu_344_p2");
    sc_trace(mVcdFile, icmp_ln994_fu_323_p2, "icmp_ln994_fu_323_p2");
    sc_trace(mVcdFile, icmp_ln994_1_fu_350_p2, "icmp_ln994_1_fu_350_p2");
    sc_trace(mVcdFile, tmp_10_fu_362_p3, "tmp_10_fu_362_p3");
    sc_trace(mVcdFile, p_Result_1_fu_376_p3, "p_Result_1_fu_376_p3");
    sc_trace(mVcdFile, xor_ln996_fu_370_p2, "xor_ln996_fu_370_p2");
    sc_trace(mVcdFile, and_ln996_fu_384_p2, "and_ln996_fu_384_p2");
    sc_trace(mVcdFile, a_fu_356_p2, "a_fu_356_p2");
    sc_trace(mVcdFile, or_ln1008_fu_390_p2, "or_ln1008_fu_390_p2");
    sc_trace(mVcdFile, add_ln1001_fu_410_p2, "add_ln1001_fu_410_p2");
    sc_trace(mVcdFile, zext_ln1001_fu_415_p1, "zext_ln1001_fu_415_p1");
    sc_trace(mVcdFile, sub_ln1001_fu_425_p2, "sub_ln1001_fu_425_p2");
    sc_trace(mVcdFile, zext_ln1001_1_fu_430_p1, "zext_ln1001_1_fu_430_p1");
    sc_trace(mVcdFile, lshr_ln1001_fu_419_p2, "lshr_ln1001_fu_419_p2");
    sc_trace(mVcdFile, shl_ln1001_fu_434_p2, "shl_ln1001_fu_434_p2");
    sc_trace(mVcdFile, icmp_ln1001_fu_404_p2, "icmp_ln1001_fu_404_p2");
    sc_trace(mVcdFile, trunc_ln1001_fu_440_p1, "trunc_ln1001_fu_440_p1");
    sc_trace(mVcdFile, trunc_ln1001_1_fu_444_p1, "trunc_ln1001_1_fu_444_p1");
    sc_trace(mVcdFile, or_ln_fu_396_p3, "or_ln_fu_396_p3");
    sc_trace(mVcdFile, m_fu_448_p3, "m_fu_448_p3");
    sc_trace(mVcdFile, m_1_fu_456_p2, "m_1_fu_456_p2");
    sc_trace(mVcdFile, sub_ln1011_fu_490_p2, "sub_ln1011_fu_490_p2");
    sc_trace(mVcdFile, select_ln1011_fu_483_p3, "select_ln1011_fu_483_p3");
    sc_trace(mVcdFile, add_ln1011_fu_495_p2, "add_ln1011_fu_495_p2");
    sc_trace(mVcdFile, m_5_fu_480_p1, "m_5_fu_480_p1");
    sc_trace(mVcdFile, tmp_4_fu_501_p3, "tmp_4_fu_501_p3");
    sc_trace(mVcdFile, p_Result_4_fu_508_p5, "p_Result_4_fu_508_p5");
    sc_trace(mVcdFile, bitcast_ln750_fu_520_p1, "bitcast_ln750_fu_520_p1");
    sc_trace(mVcdFile, grp_fu_188_ce, "grp_fu_188_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("long_subtraction.hdltvin.dat");
    mHdltvoutHandle.open("long_subtraction.hdltvout.dat");
}

long_subtraction::~long_subtraction() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete long_subtraction_bkb_U1;
}

void long_subtraction::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter6 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter2_reg.read()))) {
        icmp_ln1075_reg_577 = icmp_ln1075_fu_259_p2.read();
        icmp_ln982_reg_561 = icmp_ln982_fu_215_p2.read();
        tmp_V_4_reg_566 = tmp_V_4_fu_226_p3.read();
        trunc_ln1074_reg_571 = trunc_ln1074_fu_255_p1.read();
        trunc_ln1083_reg_582 = trunc_ln1083_fu_277_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln982_reg_561_pp0_iter4_reg = icmp_ln982_reg_561.read();
        icmp_ln982_reg_561_pp0_iter5_reg = icmp_ln982_reg_561_pp0_iter4_reg.read();
        p_Result_3_reg_555_pp0_iter3_reg = p_Result_3_reg_555.read();
        p_Result_3_reg_555_pp0_iter4_reg = p_Result_3_reg_555_pp0_iter3_reg.read();
        p_Result_3_reg_555_pp0_iter5_reg = p_Result_3_reg_555_pp0_iter4_reg.read();
        tmp_1_reg_535_pp0_iter2_reg = tmp_1_reg_535_pp0_iter1_reg.read();
        tmp_1_reg_535_pp0_iter3_reg = tmp_1_reg_535_pp0_iter2_reg.read();
        tmp_1_reg_535_pp0_iter4_reg = tmp_1_reg_535_pp0_iter3_reg.read();
        tmp_1_reg_535_pp0_iter5_reg = tmp_1_reg_535_pp0_iter4_reg.read();
        tmp_V_4_reg_566_pp0_iter4_reg = tmp_V_4_reg_566.read();
        trunc_ln990_reg_599_pp0_iter5_reg = trunc_ln990_reg_599.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter4_reg.read()) && esl_seteq<1,1,1>(icmp_ln982_reg_561_pp0_iter4_reg.read(), ap_const_lv1_0))) {
        m_4_reg_604 = m_1_fu_456_p2.read().range(15, 1);
        tmp_12_reg_609 = m_1_fu_456_p2.read().range(12, 12);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter1_reg.read()))) {
        p_Result_3_reg_555 = grp_fu_188_p2.read().range(228, 228);
        trunc_ln_reg_549 = grp_fu_188_p2.read().range(228, 112);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_120_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_128_p3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ret_V_reg_539 = ret_V_fu_179_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter3_reg.read()) && esl_seteq<1,1,1>(icmp_ln982_reg_561.read(), ap_const_lv1_0))) {
        sub_ln991_reg_587 = sub_ln991_fu_291_p2.read();
        trunc_ln990_reg_599 = trunc_ln990_fu_301_p1.read();
        trunc_ln994_reg_594 = trunc_ln994_fu_297_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_120_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_535 = tmp_1_nbreadreq_fu_128_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_535_pp0_iter1_reg = tmp_1_reg_535.read();
    }
}

void long_subtraction::thread_NZeros_fu_281_p2() {
    NZeros_fu_281_p2 = (!trunc_ln1074_reg_571.read().is_01() || !trunc_ln1083_reg_582.read().is_01())? sc_lv<32>(): (sc_biguint<32>(trunc_ln1074_reg_571.read()) + sc_biguint<32>(trunc_ln1083_reg_582.read()));
}

void long_subtraction::thread_a_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_120_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_128_p3.read()))) {
        a_V_blk_n = a_V_empty_n.read();
    } else {
        a_V_blk_n = ap_const_logic_1;
    }
}

void long_subtraction::thread_a_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        a_V_read = ap_const_logic_1;
    } else {
        a_V_read = ap_const_logic_0;
    }
}

void long_subtraction::thread_a_fu_356_p2() {
    a_fu_356_p2 = (icmp_ln994_fu_323_p2.read() & icmp_ln994_1_fu_350_p2.read());
}

void long_subtraction::thread_add_ln1001_fu_410_p2() {
    add_ln1001_fu_410_p2 = (!ap_const_lv32_FFFFFFF4.is_01() || !sub_ln991_reg_587.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFF4) + sc_biguint<32>(sub_ln991_reg_587.read()));
}

void long_subtraction::thread_add_ln1011_fu_495_p2() {
    add_ln1011_fu_495_p2 = (!sub_ln1011_fu_490_p2.read().is_01() || !select_ln1011_fu_483_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln1011_fu_490_p2.read()) + sc_biguint<5>(select_ln1011_fu_483_p3.read()));
}

void long_subtraction::thread_and_ln996_fu_384_p2() {
    and_ln996_fu_384_p2 = (p_Result_1_fu_376_p3.read() & xor_ln996_fu_370_p2.read());
}

void long_subtraction::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void long_subtraction::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void long_subtraction::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[2];
}

void long_subtraction::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void long_subtraction::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, a_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, b_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter5_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c_V_full_n.read())));
}

void long_subtraction::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, a_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, b_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter5_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c_V_full_n.read())));
}

void long_subtraction::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, a_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, b_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter5_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c_V_full_n.read())));
}

void long_subtraction::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = ((esl_seteq<1,1,1>(ap_const_logic_0, a_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, b_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state2.read())));
}

void long_subtraction::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void long_subtraction::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void long_subtraction::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void long_subtraction::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void long_subtraction::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void long_subtraction::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter5_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, c_V_full_n.read()));
}

void long_subtraction::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran2to9_state2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void long_subtraction::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void long_subtraction::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void long_subtraction::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void long_subtraction::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void long_subtraction::thread_ap_predicate_op22_read_state2() {
    ap_predicate_op22_read_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_120_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_128_p3.read()));
}

void long_subtraction::thread_ap_predicate_op24_read_state2() {
    ap_predicate_op24_read_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_120_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_128_p3.read()));
}

void long_subtraction::thread_ap_predicate_tran2to9_state2() {
    ap_predicate_tran2to9_state2 = (esl_seteq<1,1,1>(tmp_1_nbreadreq_fu_128_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(tmp_nbreadreq_fu_120_p3.read(), ap_const_lv1_0));
}

void long_subtraction::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void long_subtraction::thread_b_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_120_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_128_p3.read()))) {
        b_V_blk_n = b_V_empty_n.read();
    } else {
        b_V_blk_n = ap_const_logic_1;
    }
}

void long_subtraction::thread_b_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        b_V_read = ap_const_logic_1;
    } else {
        b_V_read = ap_const_logic_0;
    }
}

void long_subtraction::thread_bitcast_ln750_fu_520_p1() {
    bitcast_ln750_fu_520_p1 = p_Result_4_fu_508_p5.read();
}

void long_subtraction::thread_c_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter5_reg.read()))) {
        c_V_blk_n = c_V_full_n.read();
    } else {
        c_V_blk_n = ap_const_logic_1;
    }
}

void long_subtraction::thread_c_V_din() {
    c_V_din = (!icmp_ln982_reg_561_pp0_iter5_reg.read()[0].is_01())? sc_lv<16>(): ((icmp_ln982_reg_561_pp0_iter5_reg.read()[0].to_bool())? ap_const_lv16_0: bitcast_ln750_fu_520_p1.read());
}

void long_subtraction::thread_c_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_535_pp0_iter5_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        c_V_write = ap_const_logic_1;
    } else {
        c_V_write = ap_const_logic_0;
    }
}

void long_subtraction::thread_d_V_fu_155_p3() {
    d_V_fu_155_p3 = esl_concat<16,112>(a_V_dout.read(), ap_const_lv112_0);
}

void long_subtraction::thread_e_V_fu_163_p3() {
    e_V_fu_163_p3 = esl_concat<16,112>(b_V_dout.read(), ap_const_lv112_0);
}

void long_subtraction::thread_grp_fu_188_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_188_ce = ap_const_logic_1;
    } else {
        grp_fu_188_ce = ap_const_logic_0;
    }
}

void long_subtraction::thread_grp_fu_188_p0() {
    grp_fu_188_p0 =  (sc_lv<101>) (ap_const_lv229_lc_1);
}

void long_subtraction::thread_icmp_ln1001_fu_404_p2() {
    icmp_ln1001_fu_404_p2 = (!lsb_index_fu_308_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(lsb_index_fu_308_p2.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void long_subtraction::thread_icmp_ln1075_fu_259_p2() {
    icmp_ln1075_fu_259_p2 = (!tmp_8_fu_233_p4.read().is_01() || !ap_const_lv54_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_233_p4.read() == ap_const_lv54_0);
}

void long_subtraction::thread_icmp_ln982_fu_215_p2() {
    icmp_ln982_fu_215_p2 = (!trunc_ln_reg_549.read().is_01() || !ap_const_lv117_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln_reg_549.read() == ap_const_lv117_0);
}

void long_subtraction::thread_icmp_ln994_1_fu_350_p2() {
    icmp_ln994_1_fu_350_p2 = (!p_Result_s_fu_344_p2.read().is_01() || !ap_const_lv128_lc_3.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_344_p2.read() != ap_const_lv128_lc_3);
}

void long_subtraction::thread_icmp_ln994_fu_323_p2() {
    icmp_ln994_fu_323_p2 = (!tmp_9_fu_313_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_9_fu_313_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void long_subtraction::thread_l_fu_285_p3() {
    l_fu_285_p3 = (!icmp_ln1075_reg_577.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1075_reg_577.read()[0].to_bool())? NZeros_fu_281_p2.read(): trunc_ln1074_reg_571.read());
}

void long_subtraction::thread_lhs_V_fu_171_p1() {
    lhs_V_fu_171_p1 = esl_sext<129,128>(d_V_fu_155_p3.read());
}

void long_subtraction::thread_lsb_index_fu_308_p2() {
    lsb_index_fu_308_p2 = (!ap_const_lv32_FFFFFFF5.is_01() || !sub_ln991_reg_587.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFF5) + sc_biguint<32>(sub_ln991_reg_587.read()));
}

void long_subtraction::thread_lshr_ln1001_fu_419_p2() {
    lshr_ln1001_fu_419_p2 = (!zext_ln1001_fu_415_p1.read().is_01())? sc_lv<128>(): sext_ln985_fu_305_p1.read() >> (unsigned short)zext_ln1001_fu_415_p1.read().to_uint();
}

void long_subtraction::thread_lshr_ln994_fu_338_p2() {
    lshr_ln994_fu_338_p2 = (!zext_ln994_fu_334_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_2 >> (unsigned short)zext_ln994_fu_334_p1.read().to_uint();
}

void long_subtraction::thread_m_1_fu_456_p2() {
    m_1_fu_456_p2 = (!or_ln_fu_396_p3.read().is_01() || !m_fu_448_p3.read().is_01())? sc_lv<16>(): (sc_biguint<16>(or_ln_fu_396_p3.read()) + sc_biguint<16>(m_fu_448_p3.read()));
}

void long_subtraction::thread_m_5_fu_480_p1() {
    m_5_fu_480_p1 = esl_zext<16,15>(m_4_reg_604.read());
}

void long_subtraction::thread_m_fu_448_p3() {
    m_fu_448_p3 = (!icmp_ln1001_fu_404_p2.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1001_fu_404_p2.read()[0].to_bool())? trunc_ln1001_fu_440_p1.read(): trunc_ln1001_1_fu_444_p1.read());
}

void long_subtraction::thread_or_ln1008_fu_390_p2() {
    or_ln1008_fu_390_p2 = (and_ln996_fu_384_p2.read() | a_fu_356_p2.read());
}

void long_subtraction::thread_or_ln_fu_396_p3() {
    or_ln_fu_396_p3 = esl_concat<15,1>(ap_const_lv15_0, or_ln1008_fu_390_p2.read());
}

void long_subtraction::thread_p_Result_1_fu_376_p3() {
    p_Result_1_fu_376_p3 = (!lsb_index_fu_308_p2.read().is_01() || sc_biguint<32>(lsb_index_fu_308_p2.read()).to_uint() >= 128)? sc_lv<1>(): sext_ln985_fu_305_p1.read().range(sc_biguint<32>(lsb_index_fu_308_p2.read()).to_uint(), sc_biguint<32>(lsb_index_fu_308_p2.read()).to_uint());
}

void long_subtraction::thread_p_Result_4_fu_508_p5() {
    p_Result_4_fu_508_p5 = esl_partset<16,16,6,32,32>(m_5_fu_480_p1.read(), tmp_4_fu_501_p3.read(), ap_const_lv32_A, ap_const_lv32_F);
}

void long_subtraction::thread_p_Result_s_fu_344_p2() {
    p_Result_s_fu_344_p2 = (sext_ln985_fu_305_p1.read() & lshr_ln994_fu_338_p2.read());
}

void long_subtraction::thread_ret_V_fu_179_p2() {
    ret_V_fu_179_p2 = (!lhs_V_fu_171_p1.read().is_01() || !rhs_V_fu_175_p1.read().is_01())? sc_lv<129>(): (sc_bigint<129>(lhs_V_fu_171_p1.read()) - sc_bigint<129>(rhs_V_fu_175_p1.read()));
}

void long_subtraction::thread_rhs_V_fu_175_p1() {
    rhs_V_fu_175_p1 = esl_sext<129,128>(e_V_fu_163_p3.read());
}

void long_subtraction::thread_select_ln1011_fu_483_p3() {
    select_ln1011_fu_483_p3 = (!tmp_12_reg_609.read()[0].is_01())? sc_lv<5>(): ((tmp_12_reg_609.read()[0].to_bool())? ap_const_lv5_F: ap_const_lv5_E);
}

void long_subtraction::thread_sext_ln1073_fu_243_p1() {
    sext_ln1073_fu_243_p1 = esl_sext<64,54>(tmp_8_fu_233_p4.read());
}

void long_subtraction::thread_sext_ln985_fu_305_p1() {
    sext_ln985_fu_305_p1 = esl_sext<128,118>(tmp_V_4_reg_566_pp0_iter4_reg.read());
}

void long_subtraction::thread_sext_ln988_fu_212_p1() {
    sext_ln988_fu_212_p1 = esl_sext<118,117>(trunc_ln_reg_549.read());
}

void long_subtraction::thread_shl_ln1001_fu_434_p2() {
    shl_ln1001_fu_434_p2 = (!zext_ln1001_1_fu_430_p1.read().is_01())? sc_lv<128>(): sext_ln985_fu_305_p1.read() << (unsigned short)zext_ln1001_1_fu_430_p1.read().to_uint();
}

void long_subtraction::thread_sub_ln1001_fu_425_p2() {
    sub_ln1001_fu_425_p2 = (!ap_const_lv32_C.is_01() || !sub_ln991_reg_587.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_C) - sc_biguint<32>(sub_ln991_reg_587.read()));
}

void long_subtraction::thread_sub_ln1011_fu_490_p2() {
    sub_ln1011_fu_490_p2 = (!ap_const_lv5_10.is_01() || !trunc_ln990_reg_599_pp0_iter5_reg.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_10) - sc_biguint<5>(trunc_ln990_reg_599_pp0_iter5_reg.read()));
}

void long_subtraction::thread_sub_ln991_fu_291_p2() {
    sub_ln991_fu_291_p2 = (!ap_const_lv32_80.is_01() || !l_fu_285_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_80) - sc_biguint<32>(l_fu_285_p3.read()));
}

void long_subtraction::thread_sub_ln994_fu_329_p2() {
    sub_ln994_fu_329_p2 = (!ap_const_lv8_8C.is_01() || !trunc_ln994_reg_594.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_8C) - sc_biguint<8>(trunc_ln994_reg_594.read()));
}

void long_subtraction::thread_tmp_10_fu_362_p3() {
    tmp_10_fu_362_p3 = lsb_index_fu_308_p2.read().range(31, 31);
}

void long_subtraction::thread_tmp_1_nbreadreq_fu_128_p3() {
    tmp_1_nbreadreq_fu_128_p3 =  (sc_lv<1>) ((b_V_empty_n.read()));
}

void long_subtraction::thread_tmp_4_fu_501_p3() {
    tmp_4_fu_501_p3 = esl_concat<1,5>(p_Result_3_reg_555_pp0_iter5_reg.read(), add_ln1011_fu_495_p2.read());
}

void long_subtraction::thread_tmp_5_fu_269_p3() {
    tmp_5_fu_269_p3 = esl_ctlz<64,64>(x_V_fu_265_p1.read());
}

void long_subtraction::thread_tmp_8_fu_233_p4() {
    tmp_8_fu_233_p4 = tmp_V_4_fu_226_p3.read().range(117, 64);
}

void long_subtraction::thread_tmp_9_fu_313_p4() {
    tmp_9_fu_313_p4 = lsb_index_fu_308_p2.read().range(31, 1);
}

void long_subtraction::thread_tmp_V_4_fu_226_p3() {
    tmp_V_4_fu_226_p3 = (!p_Result_3_reg_555.read()[0].is_01())? sc_lv<118>(): ((p_Result_3_reg_555.read()[0].to_bool())? tmp_V_fu_220_p2.read(): sext_ln988_fu_212_p1.read());
}

void long_subtraction::thread_tmp_V_fu_220_p2() {
    tmp_V_fu_220_p2 = (!ap_const_lv118_0.is_01() || !sext_ln988_fu_212_p1.read().is_01())? sc_lv<118>(): (sc_biguint<118>(ap_const_lv118_0) - sc_bigint<118>(sext_ln988_fu_212_p1.read()));
}

void long_subtraction::thread_tmp_nbreadreq_fu_120_p3() {
    tmp_nbreadreq_fu_120_p3 =  (sc_lv<1>) ((a_V_empty_n.read()));
}

void long_subtraction::thread_tmp_s_fu_247_p3() {
    tmp_s_fu_247_p3 = esl_ctlz<64,64>(sext_ln1073_fu_243_p1.read());
}

void long_subtraction::thread_trunc_ln1001_1_fu_444_p1() {
    trunc_ln1001_1_fu_444_p1 = shl_ln1001_fu_434_p2.read().range(16-1, 0);
}

void long_subtraction::thread_trunc_ln1001_fu_440_p1() {
    trunc_ln1001_fu_440_p1 = lshr_ln1001_fu_419_p2.read().range(16-1, 0);
}

void long_subtraction::thread_trunc_ln1074_fu_255_p1() {
    trunc_ln1074_fu_255_p1 = tmp_s_fu_247_p3.read().range(32-1, 0);
}

void long_subtraction::thread_trunc_ln1083_fu_277_p1() {
    trunc_ln1083_fu_277_p1 = tmp_5_fu_269_p3.read().range(32-1, 0);
}

void long_subtraction::thread_trunc_ln990_fu_301_p1() {
    trunc_ln990_fu_301_p1 = l_fu_285_p3.read().range(5-1, 0);
}

void long_subtraction::thread_trunc_ln994_fu_297_p1() {
    trunc_ln994_fu_297_p1 = sub_ln991_fu_291_p2.read().range(8-1, 0);
}

void long_subtraction::thread_x_V_fu_265_p1() {
    x_V_fu_265_p1 = tmp_V_4_fu_226_p3.read().range(64-1, 0);
}

void long_subtraction::thread_xor_ln996_fu_370_p2() {
    xor_ln996_fu_370_p2 = (tmp_10_fu_362_p3.read() ^ ap_const_lv1_1);
}

void long_subtraction::thread_zext_ln1001_1_fu_430_p1() {
    zext_ln1001_1_fu_430_p1 = esl_zext<128,32>(sub_ln1001_fu_425_p2.read());
}

void long_subtraction::thread_zext_ln1001_fu_415_p1() {
    zext_ln1001_fu_415_p1 = esl_zext<128,32>(add_ln1001_fu_410_p2.read());
}

void long_subtraction::thread_zext_ln994_fu_334_p1() {
    zext_ln994_fu_334_p1 = esl_zext<128,8>(sub_ln994_fu_329_p2.read());
}

void long_subtraction::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran2to9_state2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran2to9_state2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void long_subtraction::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_V_dout\" :  \"" << a_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_V_empty_n\" :  \"" << a_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_V_read\" :  \"" << a_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_V_dout\" :  \"" << b_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_V_empty_n\" :  \"" << b_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_V_read\" :  \"" << b_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_V_din\" :  \"" << c_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_V_full_n\" :  \"" << c_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_V_write\" :  \"" << c_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

