// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "int_subtraction.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic int_subtraction::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic int_subtraction::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> int_subtraction::ap_ST_fsm_state1 = "1";
const sc_lv<3> int_subtraction::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> int_subtraction::ap_ST_fsm_state19 = "100";
const sc_lv<32> int_subtraction::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool int_subtraction::ap_const_boolean_1 = true;
const sc_lv<32> int_subtraction::ap_const_lv32_1 = "1";
const bool int_subtraction::ap_const_boolean_0 = false;
const sc_lv<1> int_subtraction::ap_const_lv1_1 = "1";
const sc_lv<1> int_subtraction::ap_const_lv1_0 = "0";
const sc_lv<16> int_subtraction::ap_const_lv16_8D1 = "100011010001";
const sc_lv<32> int_subtraction::ap_const_lv32_2 = "10";

int_subtraction::int_subtraction(sc_module_name name) : sc_module(name), mVcdFile(0) {
    int_subtraction_sbkb_U1 = new int_subtraction_sbkb<1,4,32,32>("int_subtraction_sbkb_U1");
    int_subtraction_sbkb_U1->clk(ap_clk);
    int_subtraction_sbkb_U1->reset(ap_rst);
    int_subtraction_sbkb_U1->din0(grp_fu_79_p0);
    int_subtraction_sbkb_U1->ce(grp_fu_79_ce);
    int_subtraction_sbkb_U1->dout(grp_fu_79_p1);
    int_subtraction_sbkb_U2 = new int_subtraction_sbkb<1,4,32,32>("int_subtraction_sbkb_U2");
    int_subtraction_sbkb_U2->clk(ap_clk);
    int_subtraction_sbkb_U2->reset(ap_rst);
    int_subtraction_sbkb_U2->din0(grp_fu_82_p0);
    int_subtraction_sbkb_U2->ce(grp_fu_82_ce);
    int_subtraction_sbkb_U2->dout(grp_fu_82_p1);
    int_subtraction_scud_U3 = new int_subtraction_scud<1,2,32,16>("int_subtraction_scud_U3");
    int_subtraction_scud_U3->clk(ap_clk);
    int_subtraction_scud_U3->reset(ap_rst);
    int_subtraction_scud_U3->din0(tmp_4_reg_135);
    int_subtraction_scud_U3->ce(grp_fu_85_ce);
    int_subtraction_scud_U3->dout(grp_fu_85_p1);
    int_subtraction_scud_U4 = new int_subtraction_scud<1,2,32,16>("int_subtraction_scud_U4");
    int_subtraction_scud_U4->clk(ap_clk);
    int_subtraction_scud_U4->reset(ap_rst);
    int_subtraction_scud_U4->din0(tmp_7_reg_140);
    int_subtraction_scud_U4->ce(grp_fu_88_ce);
    int_subtraction_scud_U4->dout(grp_fu_88_p1);
    int_subtraction_hdEe_U5 = new int_subtraction_hdEe<1,5,16,16,16>("int_subtraction_hdEe_U5");
    int_subtraction_hdEe_U5->clk(ap_clk);
    int_subtraction_hdEe_U5->reset(ap_rst);
    int_subtraction_hdEe_U5->din0(d_reg_145);
    int_subtraction_hdEe_U5->din1(e_reg_150);
    int_subtraction_hdEe_U5->ce(grp_fu_91_ce);
    int_subtraction_hdEe_U5->dout(grp_fu_91_p2);
    int_subtraction_heOg_U6 = new int_subtraction_heOg<1,4,16,16,16>("int_subtraction_heOg_U6");
    int_subtraction_heOg_U6->clk(ap_clk);
    int_subtraction_heOg_U6->reset(ap_rst);
    int_subtraction_heOg_U6->din0(tmp_6_reg_155);
    int_subtraction_heOg_U6->din1(ap_var_for_const0);
    int_subtraction_heOg_U6->ce(grp_fu_95_ce);
    int_subtraction_heOg_U6->dout(grp_fu_95_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_V_blk_n);
    sensitive << ( a_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_44_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_52_p3 );

    SC_METHOD(thread_a_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op32_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( a_V_empty_n );
    sensitive << ( b_V_empty_n );
    sensitive << ( c_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( tmp_1_reg_111_pp0_iter15_reg );
    sensitive << ( ap_predicate_op32_read_state2 );
    sensitive << ( ap_predicate_op33_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( a_V_empty_n );
    sensitive << ( b_V_empty_n );
    sensitive << ( c_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( tmp_1_reg_111_pp0_iter15_reg );
    sensitive << ( ap_predicate_op32_read_state2 );
    sensitive << ( ap_predicate_op33_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( a_V_empty_n );
    sensitive << ( b_V_empty_n );
    sensitive << ( c_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( tmp_1_reg_111_pp0_iter15_reg );
    sensitive << ( ap_predicate_op32_read_state2 );
    sensitive << ( ap_predicate_op33_read_state2 );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);
    sensitive << ( c_V_full_n );
    sensitive << ( tmp_1_reg_111_pp0_iter15_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( a_V_empty_n );
    sensitive << ( b_V_empty_n );
    sensitive << ( ap_predicate_op32_read_state2 );
    sensitive << ( ap_predicate_op33_read_state2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( ap_predicate_tran2to19_state2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );

    SC_METHOD(thread_ap_predicate_op32_read_state2);
    sensitive << ( tmp_nbreadreq_fu_44_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_52_p3 );

    SC_METHOD(thread_ap_predicate_op33_read_state2);
    sensitive << ( tmp_nbreadreq_fu_44_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_52_p3 );

    SC_METHOD(thread_ap_predicate_tran2to19_state2);
    sensitive << ( tmp_nbreadreq_fu_44_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_52_p3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_b_V_blk_n);
    sensitive << ( b_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_44_p3 );
    sensitive << ( tmp_1_nbreadreq_fu_52_p3 );

    SC_METHOD(thread_b_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op33_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c_V_blk_n);
    sensitive << ( c_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( tmp_1_reg_111_pp0_iter15_reg );

    SC_METHOD(thread_c_V_din);
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( tmp_1_reg_111_pp0_iter15_reg );
    sensitive << ( f_reg_160 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_c_V_write);
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( tmp_1_reg_111_pp0_iter15_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_79_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_79_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_reg_115 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_grp_fu_82_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_82_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_5_reg_120 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_grp_fu_85_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_88_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_91_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_95_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_1_nbreadreq_fu_52_p3);
    sensitive << ( b_V_empty_n );

    SC_METHOD(thread_tmp_nbreadreq_fu_44_p3);
    sensitive << ( a_V_empty_n );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_predicate_tran2to19_state2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter15 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "int_subtraction_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_V_dout, "(port)a_V_dout");
    sc_trace(mVcdFile, a_V_empty_n, "(port)a_V_empty_n");
    sc_trace(mVcdFile, a_V_read, "(port)a_V_read");
    sc_trace(mVcdFile, b_V_dout, "(port)b_V_dout");
    sc_trace(mVcdFile, b_V_empty_n, "(port)b_V_empty_n");
    sc_trace(mVcdFile, b_V_read, "(port)b_V_read");
    sc_trace(mVcdFile, c_V_din, "(port)c_V_din");
    sc_trace(mVcdFile, c_V_full_n, "(port)c_V_full_n");
    sc_trace(mVcdFile, c_V_write, "(port)c_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, a_V_blk_n, "a_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_44_p3, "tmp_nbreadreq_fu_44_p3");
    sc_trace(mVcdFile, tmp_1_nbreadreq_fu_52_p3, "tmp_1_nbreadreq_fu_52_p3");
    sc_trace(mVcdFile, b_V_blk_n, "b_V_blk_n");
    sc_trace(mVcdFile, c_V_blk_n, "c_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, tmp_1_reg_111, "tmp_1_reg_111");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter15_reg, "tmp_1_reg_111_pp0_iter15_reg");
    sc_trace(mVcdFile, ap_predicate_op32_read_state2, "ap_predicate_op32_read_state2");
    sc_trace(mVcdFile, ap_predicate_op33_read_state2, "ap_predicate_op33_read_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter1_reg, "tmp_1_reg_111_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter2_reg, "tmp_1_reg_111_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter3_reg, "tmp_1_reg_111_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter4_reg, "tmp_1_reg_111_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter5_reg, "tmp_1_reg_111_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter6_reg, "tmp_1_reg_111_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter7_reg, "tmp_1_reg_111_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter8_reg, "tmp_1_reg_111_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter9_reg, "tmp_1_reg_111_pp0_iter9_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter10_reg, "tmp_1_reg_111_pp0_iter10_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter11_reg, "tmp_1_reg_111_pp0_iter11_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter12_reg, "tmp_1_reg_111_pp0_iter12_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter13_reg, "tmp_1_reg_111_pp0_iter13_reg");
    sc_trace(mVcdFile, tmp_1_reg_111_pp0_iter14_reg, "tmp_1_reg_111_pp0_iter14_reg");
    sc_trace(mVcdFile, tmp_3_reg_115, "tmp_3_reg_115");
    sc_trace(mVcdFile, tmp_5_reg_120, "tmp_5_reg_120");
    sc_trace(mVcdFile, grp_fu_79_p1, "grp_fu_79_p1");
    sc_trace(mVcdFile, tmp_4_reg_135, "tmp_4_reg_135");
    sc_trace(mVcdFile, grp_fu_82_p1, "grp_fu_82_p1");
    sc_trace(mVcdFile, tmp_7_reg_140, "tmp_7_reg_140");
    sc_trace(mVcdFile, grp_fu_85_p1, "grp_fu_85_p1");
    sc_trace(mVcdFile, d_reg_145, "d_reg_145");
    sc_trace(mVcdFile, grp_fu_88_p1, "grp_fu_88_p1");
    sc_trace(mVcdFile, e_reg_150, "e_reg_150");
    sc_trace(mVcdFile, grp_fu_91_p2, "grp_fu_91_p2");
    sc_trace(mVcdFile, tmp_6_reg_155, "tmp_6_reg_155");
    sc_trace(mVcdFile, grp_fu_95_p2, "grp_fu_95_p2");
    sc_trace(mVcdFile, f_reg_160, "f_reg_160");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_predicate_tran2to19_state2, "ap_predicate_tran2to19_state2");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_79_p0, "grp_fu_79_p0");
    sc_trace(mVcdFile, grp_fu_82_p0, "grp_fu_82_p0");
    sc_trace(mVcdFile, grp_fu_79_ce, "grp_fu_79_ce");
    sc_trace(mVcdFile, grp_fu_82_ce, "grp_fu_82_ce");
    sc_trace(mVcdFile, grp_fu_85_ce, "grp_fu_85_ce");
    sc_trace(mVcdFile, grp_fu_88_ce, "grp_fu_88_ce");
    sc_trace(mVcdFile, grp_fu_91_ce, "grp_fu_91_ce");
    sc_trace(mVcdFile, grp_fu_95_ce, "grp_fu_95_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("int_subtraction.hdltvin.dat");
    mHdltvoutHandle.open("int_subtraction.hdltvout.dat");
}

int_subtraction::~int_subtraction() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete int_subtraction_sbkb_U1;
    delete int_subtraction_sbkb_U2;
    delete int_subtraction_scud_U3;
    delete int_subtraction_scud_U4;
    delete int_subtraction_hdEe_U5;
    delete int_subtraction_heOg_U6;
}

void int_subtraction::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv16_8D1;
}

void int_subtraction::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter16 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter5_reg.read()))) {
        d_reg_145 = grp_fu_85_p1.read();
        e_reg_150 = grp_fu_88_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter14_reg.read()))) {
        f_reg_160 = grp_fu_95_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_44_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_111 = tmp_1_nbreadreq_fu_52_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        tmp_1_reg_111_pp0_iter10_reg = tmp_1_reg_111_pp0_iter9_reg.read();
        tmp_1_reg_111_pp0_iter11_reg = tmp_1_reg_111_pp0_iter10_reg.read();
        tmp_1_reg_111_pp0_iter12_reg = tmp_1_reg_111_pp0_iter11_reg.read();
        tmp_1_reg_111_pp0_iter13_reg = tmp_1_reg_111_pp0_iter12_reg.read();
        tmp_1_reg_111_pp0_iter14_reg = tmp_1_reg_111_pp0_iter13_reg.read();
        tmp_1_reg_111_pp0_iter15_reg = tmp_1_reg_111_pp0_iter14_reg.read();
        tmp_1_reg_111_pp0_iter2_reg = tmp_1_reg_111_pp0_iter1_reg.read();
        tmp_1_reg_111_pp0_iter3_reg = tmp_1_reg_111_pp0_iter2_reg.read();
        tmp_1_reg_111_pp0_iter4_reg = tmp_1_reg_111_pp0_iter3_reg.read();
        tmp_1_reg_111_pp0_iter5_reg = tmp_1_reg_111_pp0_iter4_reg.read();
        tmp_1_reg_111_pp0_iter6_reg = tmp_1_reg_111_pp0_iter5_reg.read();
        tmp_1_reg_111_pp0_iter7_reg = tmp_1_reg_111_pp0_iter6_reg.read();
        tmp_1_reg_111_pp0_iter8_reg = tmp_1_reg_111_pp0_iter7_reg.read();
        tmp_1_reg_111_pp0_iter9_reg = tmp_1_reg_111_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_111_pp0_iter1_reg = tmp_1_reg_111.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_3_reg_115 = a_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter3_reg.read()))) {
        tmp_4_reg_135 = grp_fu_79_p1.read();
        tmp_7_reg_140 = grp_fu_82_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_read_state2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_5_reg_120 = b_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter10_reg.read()))) {
        tmp_6_reg_155 = grp_fu_91_p2.read();
    }
}

void int_subtraction::thread_a_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_44_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_52_p3.read()))) {
        a_V_blk_n = a_V_empty_n.read();
    } else {
        a_V_blk_n = ap_const_logic_1;
    }
}

void int_subtraction::thread_a_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        a_V_read = ap_const_logic_1;
    } else {
        a_V_read = ap_const_logic_0;
    }
}

void int_subtraction::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void int_subtraction::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void int_subtraction::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[2];
}

void int_subtraction::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, a_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, b_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter15_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c_V_full_n.read())));
}

void int_subtraction::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, a_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, b_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter15_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c_V_full_n.read())));
}

void int_subtraction::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, a_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, b_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_read_state2.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter15_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c_V_full_n.read())));
}

void int_subtraction::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter15_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, c_V_full_n.read()));
}

void int_subtraction::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = ((esl_seteq<1,1,1>(ap_const_logic_0, a_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, b_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_read_state2.read())));
}

void int_subtraction::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void int_subtraction::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran2to19_state2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void int_subtraction::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void int_subtraction::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void int_subtraction::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void int_subtraction::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void int_subtraction::thread_ap_predicate_op32_read_state2() {
    ap_predicate_op32_read_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_44_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_52_p3.read()));
}

void int_subtraction::thread_ap_predicate_op33_read_state2() {
    ap_predicate_op33_read_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_44_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_52_p3.read()));
}

void int_subtraction::thread_ap_predicate_tran2to19_state2() {
    ap_predicate_tran2to19_state2 = (esl_seteq<1,1,1>(tmp_1_nbreadreq_fu_52_p3.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(tmp_nbreadreq_fu_44_p3.read(), ap_const_lv1_0));
}

void int_subtraction::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void int_subtraction::thread_b_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_44_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_52_p3.read()))) {
        b_V_blk_n = b_V_empty_n.read();
    } else {
        b_V_blk_n = ap_const_logic_1;
    }
}

void int_subtraction::thread_b_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        b_V_read = ap_const_logic_1;
    } else {
        b_V_read = ap_const_logic_0;
    }
}

void int_subtraction::thread_c_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter15_reg.read()))) {
        c_V_blk_n = c_V_full_n.read();
    } else {
        c_V_blk_n = ap_const_logic_1;
    }
}

void int_subtraction::thread_c_V_din() {
    c_V_din = f_reg_160.read();
}

void int_subtraction::thread_c_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_111_pp0_iter15_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        c_V_write = ap_const_logic_1;
    } else {
        c_V_write = ap_const_logic_0;
    }
}

void int_subtraction::thread_grp_fu_79_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_79_ce = ap_const_logic_1;
    } else {
        grp_fu_79_ce = ap_const_logic_0;
    }
}

void int_subtraction::thread_grp_fu_79_p0() {
    grp_fu_79_p0 = esl_sext<32,16>(tmp_3_reg_115.read());
}

void int_subtraction::thread_grp_fu_82_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_82_ce = ap_const_logic_1;
    } else {
        grp_fu_82_ce = ap_const_logic_0;
    }
}

void int_subtraction::thread_grp_fu_82_p0() {
    grp_fu_82_p0 = esl_sext<32,16>(tmp_5_reg_120.read());
}

void int_subtraction::thread_grp_fu_85_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_85_ce = ap_const_logic_1;
    } else {
        grp_fu_85_ce = ap_const_logic_0;
    }
}

void int_subtraction::thread_grp_fu_88_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_88_ce = ap_const_logic_1;
    } else {
        grp_fu_88_ce = ap_const_logic_0;
    }
}

void int_subtraction::thread_grp_fu_91_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_91_ce = ap_const_logic_1;
    } else {
        grp_fu_91_ce = ap_const_logic_0;
    }
}

void int_subtraction::thread_grp_fu_95_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_95_ce = ap_const_logic_1;
    } else {
        grp_fu_95_ce = ap_const_logic_0;
    }
}

void int_subtraction::thread_tmp_1_nbreadreq_fu_52_p3() {
    tmp_1_nbreadreq_fu_52_p3 =  (sc_lv<1>) ((b_V_empty_n.read()));
}

void int_subtraction::thread_tmp_nbreadreq_fu_44_p3() {
    tmp_nbreadreq_fu_44_p3 =  (sc_lv<1>) ((a_V_empty_n.read()));
}

void int_subtraction::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter15.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran2to19_state2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter15.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran2to19_state2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void int_subtraction::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_V_dout\" :  \"" << a_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_V_empty_n\" :  \"" << a_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_V_read\" :  \"" << a_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_V_dout\" :  \"" << b_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_V_empty_n\" :  \"" << b_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_V_read\" :  \"" << b_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_V_din\" :  \"" << c_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_V_full_n\" :  \"" << c_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_V_write\" :  \"" << c_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

