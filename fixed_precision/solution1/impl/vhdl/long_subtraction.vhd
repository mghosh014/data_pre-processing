-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity long_subtraction is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    a_V_empty_n : IN STD_LOGIC;
    a_V_read : OUT STD_LOGIC;
    b_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    b_V_empty_n : IN STD_LOGIC;
    b_V_read : OUT STD_LOGIC;
    c_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    c_V_full_n : IN STD_LOGIC;
    c_V_write : OUT STD_LOGIC );
end;


architecture behav of long_subtraction is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "long_subtraction,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045-ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.662000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=48,HLS_SYN_FF=1213,HLS_SYN_LUT=2883,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv112_0 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv229_lc_1 : STD_LOGIC_VECTOR (228 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001101000100000100110101000010011111011110011111111100000000000000000000000000000000000000000000000";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_E4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100100";
    constant ap_const_lv117_0 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv118_0 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_FFFFFFF5 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111110101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_8C : STD_LOGIC_VECTOR (7 downto 0) := "10001100";
    constant ap_const_lv128_lc_2 : STD_LOGIC_VECTOR (127 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv128_lc_3 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_FFFFFFF4 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111110100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal a_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_nbreadreq_fu_120_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_nbreadreq_fu_128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_V_blk_n : STD_LOGIC;
    signal c_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal tmp_1_reg_535 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_535_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op22_read_state2 : BOOLEAN;
    signal ap_predicate_op24_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_1_reg_535_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_535_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_535_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_535_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_179_p2 : STD_LOGIC_VECTOR (128 downto 0);
    signal ret_V_reg_539 : STD_LOGIC_VECTOR (128 downto 0);
    signal trunc_ln_reg_549 : STD_LOGIC_VECTOR (116 downto 0);
    signal p_Result_3_reg_555 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_555_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_555_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_555_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln982_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln982_reg_561 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln982_reg_561_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln982_reg_561_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_4_fu_226_p3 : STD_LOGIC_VECTOR (117 downto 0);
    signal tmp_V_4_reg_566 : STD_LOGIC_VECTOR (117 downto 0);
    signal tmp_V_4_reg_566_pp0_iter4_reg : STD_LOGIC_VECTOR (117 downto 0);
    signal trunc_ln1074_fu_255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1074_reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1075_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1075_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1083_fu_277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1083_reg_582 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln991_fu_291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln991_reg_587 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln994_fu_297_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln994_reg_594 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln990_fu_301_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln990_reg_599 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln990_reg_599_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal m_4_reg_604 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_12_reg_609 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_predicate_tran2to9_state2 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal d_V_fu_155_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal e_V_fu_163_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal lhs_V_fu_171_p1 : STD_LOGIC_VECTOR (128 downto 0);
    signal rhs_V_fu_175_p1 : STD_LOGIC_VECTOR (128 downto 0);
    signal grp_fu_188_p0 : STD_LOGIC_VECTOR (100 downto 0);
    signal grp_fu_188_p2 : STD_LOGIC_VECTOR (228 downto 0);
    signal sext_ln988_fu_212_p1 : STD_LOGIC_VECTOR (117 downto 0);
    signal tmp_V_fu_220_p2 : STD_LOGIC_VECTOR (117 downto 0);
    signal tmp_8_fu_233_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln1073_fu_243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_247_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_V_fu_265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_269_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal NZeros_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_285_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_313_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln994_fu_329_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln994_fu_334_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal sext_ln985_fu_305_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln994_fu_338_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_s_fu_344_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal icmp_ln994_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln994_1_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_362_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_376_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln996_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln996_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1008_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1001_fu_410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1001_fu_415_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal sub_ln1001_fu_425_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1001_1_fu_430_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln1001_fu_419_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal shl_ln1001_fu_434_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal icmp_ln1001_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1001_fu_440_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1001_1_fu_444_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln_fu_396_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal m_fu_448_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal m_1_fu_456_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1011_fu_490_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1011_fu_483_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1011_fu_495_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal m_5_fu_480_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_501_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_4_fu_508_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln750_fu_520_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_188_ce : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component long_subtraction_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (100 downto 0);
        din1 : IN STD_LOGIC_VECTOR (128 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (228 downto 0) );
    end component;



begin
    long_subtraction_bkb_U1 : component long_subtraction_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 101,
        din1_WIDTH => 129,
        dout_WIDTH => 229)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_188_p0,
        din1 => ret_V_reg_539,
        ce => grp_fu_188_ce,
        dout => grp_fu_188_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_535_pp0_iter2_reg = ap_const_lv1_1))) then
                icmp_ln1075_reg_577 <= icmp_ln1075_fu_259_p2;
                icmp_ln982_reg_561 <= icmp_ln982_fu_215_p2;
                tmp_V_4_reg_566 <= tmp_V_4_fu_226_p3;
                trunc_ln1074_reg_571 <= trunc_ln1074_fu_255_p1;
                trunc_ln1083_reg_582 <= trunc_ln1083_fu_277_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln982_reg_561_pp0_iter4_reg <= icmp_ln982_reg_561;
                icmp_ln982_reg_561_pp0_iter5_reg <= icmp_ln982_reg_561_pp0_iter4_reg;
                p_Result_3_reg_555_pp0_iter3_reg <= p_Result_3_reg_555;
                p_Result_3_reg_555_pp0_iter4_reg <= p_Result_3_reg_555_pp0_iter3_reg;
                p_Result_3_reg_555_pp0_iter5_reg <= p_Result_3_reg_555_pp0_iter4_reg;
                tmp_1_reg_535_pp0_iter2_reg <= tmp_1_reg_535_pp0_iter1_reg;
                tmp_1_reg_535_pp0_iter3_reg <= tmp_1_reg_535_pp0_iter2_reg;
                tmp_1_reg_535_pp0_iter4_reg <= tmp_1_reg_535_pp0_iter3_reg;
                tmp_1_reg_535_pp0_iter5_reg <= tmp_1_reg_535_pp0_iter4_reg;
                tmp_V_4_reg_566_pp0_iter4_reg <= tmp_V_4_reg_566;
                trunc_ln990_reg_599_pp0_iter5_reg <= trunc_ln990_reg_599;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_535_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln982_reg_561_pp0_iter4_reg = ap_const_lv1_0))) then
                m_4_reg_604 <= m_1_fu_456_p2(15 downto 1);
                tmp_12_reg_609 <= m_1_fu_456_p2(12 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_535_pp0_iter1_reg = ap_const_lv1_1))) then
                p_Result_3_reg_555 <= grp_fu_188_p2(228 downto 228);
                trunc_ln_reg_549 <= grp_fu_188_p2(228 downto 112);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_120_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ret_V_reg_539(128 downto 112) <= ret_V_fu_179_p2(128 downto 112);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_535_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln982_reg_561 = ap_const_lv1_0))) then
                sub_ln991_reg_587 <= sub_ln991_fu_291_p2;
                trunc_ln990_reg_599 <= trunc_ln990_fu_301_p1;
                trunc_ln994_reg_594 <= trunc_ln994_fu_297_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_120_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_reg_535 <= tmp_1_nbreadreq_fu_128_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_reg_535_pp0_iter1_reg <= tmp_1_reg_535;
            end if;
        end if;
    end process;
    ret_V_reg_539(111 downto 0) <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone, ap_predicate_tran2to9_state2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_tran2to9_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_tran2to9_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    NZeros_fu_281_p2 <= std_logic_vector(unsigned(trunc_ln1074_reg_571) + unsigned(trunc_ln1083_reg_582));

    a_V_blk_n_assign_proc : process(a_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, tmp_nbreadreq_fu_120_p3, tmp_1_nbreadreq_fu_128_p3)
    begin
        if (((tmp_1_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_120_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            a_V_blk_n <= a_V_empty_n;
        else 
            a_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    a_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_predicate_op22_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op22_read_state2 = ap_const_boolean_1))) then 
            a_V_read <= ap_const_logic_1;
        else 
            a_V_read <= ap_const_logic_0;
        end if; 
    end process;

    a_fu_356_p2 <= (icmp_ln994_fu_323_p2 and icmp_ln994_1_fu_350_p2);
    add_ln1001_fu_410_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFF4) + signed(sub_ln991_reg_587));
    add_ln1011_fu_495_p2 <= std_logic_vector(unsigned(sub_ln1011_fu_490_p2) + unsigned(select_ln1011_fu_483_p3));
    and_ln996_fu_384_p2 <= (xor_ln996_fu_370_p2 and p_Result_1_fu_376_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state9 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(a_V_empty_n, b_V_empty_n, c_V_full_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, tmp_1_reg_535_pp0_iter5_reg, ap_predicate_op22_read_state2, ap_predicate_op24_read_state2)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_1_reg_535_pp0_iter5_reg = ap_const_lv1_1) and (c_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((b_V_empty_n = ap_const_logic_0) and (ap_predicate_op24_read_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = a_V_empty_n) and (ap_predicate_op22_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(a_V_empty_n, b_V_empty_n, c_V_full_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, tmp_1_reg_535_pp0_iter5_reg, ap_predicate_op22_read_state2, ap_predicate_op24_read_state2)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_1_reg_535_pp0_iter5_reg = ap_const_lv1_1) and (c_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((b_V_empty_n = ap_const_logic_0) and (ap_predicate_op24_read_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = a_V_empty_n) and (ap_predicate_op22_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(a_V_empty_n, b_V_empty_n, c_V_full_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, tmp_1_reg_535_pp0_iter5_reg, ap_predicate_op22_read_state2, ap_predicate_op24_read_state2)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_1_reg_535_pp0_iter5_reg = ap_const_lv1_1) and (c_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((b_V_empty_n = ap_const_logic_0) and (ap_predicate_op24_read_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = a_V_empty_n) and (ap_predicate_op22_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(a_V_empty_n, b_V_empty_n, ap_predicate_op22_read_state2, ap_predicate_op24_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter0 <= (((b_V_empty_n = ap_const_logic_0) and (ap_predicate_op24_read_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = a_V_empty_n) and (ap_predicate_op22_read_state2 = ap_const_boolean_1)));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter6_assign_proc : process(c_V_full_n, tmp_1_reg_535_pp0_iter5_reg)
    begin
                ap_block_state8_pp0_stage0_iter6 <= ((tmp_1_reg_535_pp0_iter5_reg = ap_const_lv1_1) and (c_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(ap_predicate_tran2to9_state2)
    begin
        if ((ap_predicate_tran2to9_state2 = ap_const_boolean_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op22_read_state2_assign_proc : process(tmp_nbreadreq_fu_120_p3, tmp_1_nbreadreq_fu_128_p3)
    begin
                ap_predicate_op22_read_state2 <= ((tmp_1_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_120_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op24_read_state2_assign_proc : process(tmp_nbreadreq_fu_120_p3, tmp_1_nbreadreq_fu_128_p3)
    begin
                ap_predicate_op24_read_state2 <= ((tmp_1_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_120_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_tran2to9_state2_assign_proc : process(tmp_nbreadreq_fu_120_p3, tmp_1_nbreadreq_fu_128_p3)
    begin
                ap_predicate_tran2to9_state2 <= ((tmp_1_nbreadreq_fu_128_p3 = ap_const_lv1_0) or (tmp_nbreadreq_fu_120_p3 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_V_blk_n_assign_proc : process(b_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, tmp_nbreadreq_fu_120_p3, tmp_1_nbreadreq_fu_128_p3)
    begin
        if (((tmp_1_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_120_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            b_V_blk_n <= b_V_empty_n;
        else 
            b_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    b_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_predicate_op24_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state2 = ap_const_boolean_1))) then 
            b_V_read <= ap_const_logic_1;
        else 
            b_V_read <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln750_fu_520_p1 <= p_Result_4_fu_508_p5;

    c_V_blk_n_assign_proc : process(c_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, tmp_1_reg_535_pp0_iter5_reg)
    begin
        if (((tmp_1_reg_535_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            c_V_blk_n <= c_V_full_n;
        else 
            c_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c_V_din <= 
        ap_const_lv16_0 when (icmp_ln982_reg_561_pp0_iter5_reg(0) = '1') else 
        bitcast_ln750_fu_520_p1;

    c_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, tmp_1_reg_535_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_535_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            c_V_write <= ap_const_logic_1;
        else 
            c_V_write <= ap_const_logic_0;
        end if; 
    end process;

    d_V_fu_155_p3 <= (a_V_dout & ap_const_lv112_0);
    e_V_fu_163_p3 <= (b_V_dout & ap_const_lv112_0);

    grp_fu_188_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_188_ce <= ap_const_logic_1;
        else 
            grp_fu_188_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_188_p0 <= ap_const_lv229_lc_1(101 - 1 downto 0);
    icmp_ln1001_fu_404_p2 <= "1" when (signed(lsb_index_fu_308_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1075_fu_259_p2 <= "1" when (tmp_8_fu_233_p4 = ap_const_lv54_0) else "0";
    icmp_ln982_fu_215_p2 <= "1" when (trunc_ln_reg_549 = ap_const_lv117_0) else "0";
    icmp_ln994_1_fu_350_p2 <= "0" when (p_Result_s_fu_344_p2 = ap_const_lv128_lc_3) else "1";
    icmp_ln994_fu_323_p2 <= "1" when (signed(tmp_9_fu_313_p4) > signed(ap_const_lv31_0)) else "0";
    l_fu_285_p3 <= 
        NZeros_fu_281_p2 when (icmp_ln1075_reg_577(0) = '1') else 
        trunc_ln1074_reg_571;
        lhs_V_fu_171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_V_fu_155_p3),129));

    lsb_index_fu_308_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFF5) + signed(sub_ln991_reg_587));
    lshr_ln1001_fu_419_p2 <= std_logic_vector(shift_right(unsigned(sext_ln985_fu_305_p1),to_integer(unsigned('0' & zext_ln1001_fu_415_p1(31-1 downto 0)))));
    lshr_ln994_fu_338_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv128_lc_2),to_integer(unsigned('0' & zext_ln994_fu_334_p1(31-1 downto 0)))));
    m_1_fu_456_p2 <= std_logic_vector(unsigned(or_ln_fu_396_p3) + unsigned(m_fu_448_p3));
    m_5_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_4_reg_604),16));
    m_fu_448_p3 <= 
        trunc_ln1001_fu_440_p1 when (icmp_ln1001_fu_404_p2(0) = '1') else 
        trunc_ln1001_1_fu_444_p1;
    or_ln1008_fu_390_p2 <= (and_ln996_fu_384_p2 or a_fu_356_p2);
    or_ln_fu_396_p3 <= (ap_const_lv15_0 & or_ln1008_fu_390_p2);
    p_Result_1_fu_376_p3 <= sext_ln985_fu_305_p1(to_integer(unsigned(lsb_index_fu_308_p2)) downto to_integer(unsigned(lsb_index_fu_308_p2))) when (to_integer(unsigned(lsb_index_fu_308_p2))>= 0 and to_integer(unsigned(lsb_index_fu_308_p2))<=127) else "-";
    p_Result_4_fu_508_p5 <= (tmp_4_fu_501_p3 & m_5_fu_480_p1(9 downto 0));
    p_Result_s_fu_344_p2 <= (sext_ln985_fu_305_p1 and lshr_ln994_fu_338_p2);
    ret_V_fu_179_p2 <= std_logic_vector(signed(lhs_V_fu_171_p1) - signed(rhs_V_fu_175_p1));
        rhs_V_fu_175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(e_V_fu_163_p3),129));

    select_ln1011_fu_483_p3 <= 
        ap_const_lv5_F when (tmp_12_reg_609(0) = '1') else 
        ap_const_lv5_E;
        sext_ln1073_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_233_p4),64));

        sext_ln985_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_4_reg_566_pp0_iter4_reg),128));

        sext_ln988_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_549),118));

    shl_ln1001_fu_434_p2 <= std_logic_vector(shift_left(unsigned(sext_ln985_fu_305_p1),to_integer(unsigned('0' & zext_ln1001_1_fu_430_p1(31-1 downto 0)))));
    sub_ln1001_fu_425_p2 <= std_logic_vector(unsigned(ap_const_lv32_C) - unsigned(sub_ln991_reg_587));
    sub_ln1011_fu_490_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln990_reg_599_pp0_iter5_reg));
    sub_ln991_fu_291_p2 <= std_logic_vector(unsigned(ap_const_lv32_80) - unsigned(l_fu_285_p3));
    sub_ln994_fu_329_p2 <= std_logic_vector(signed(ap_const_lv8_8C) - signed(trunc_ln994_reg_594));
    tmp_10_fu_362_p3 <= lsb_index_fu_308_p2(31 downto 31);
    tmp_1_nbreadreq_fu_128_p3 <= (0=>(b_V_empty_n), others=>'-');
    tmp_4_fu_501_p3 <= (p_Result_3_reg_555_pp0_iter5_reg & add_ln1011_fu_495_p2);
    
    tmp_5_fu_269_p3_proc : process(x_V_fu_265_p1)
    begin
        tmp_5_fu_269_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if x_V_fu_265_p1(i) = '1' then
                tmp_5_fu_269_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_8_fu_233_p4 <= tmp_V_4_fu_226_p3(117 downto 64);
    tmp_9_fu_313_p4 <= lsb_index_fu_308_p2(31 downto 1);
    tmp_V_4_fu_226_p3 <= 
        tmp_V_fu_220_p2 when (p_Result_3_reg_555(0) = '1') else 
        sext_ln988_fu_212_p1;
    tmp_V_fu_220_p2 <= std_logic_vector(unsigned(ap_const_lv118_0) - unsigned(sext_ln988_fu_212_p1));
    tmp_nbreadreq_fu_120_p3 <= (0=>(a_V_empty_n), others=>'-');
    
    tmp_s_fu_247_p3_proc : process(sext_ln1073_fu_243_p1)
    begin
        tmp_s_fu_247_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if sext_ln1073_fu_243_p1(i) = '1' then
                tmp_s_fu_247_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    trunc_ln1001_1_fu_444_p1 <= shl_ln1001_fu_434_p2(16 - 1 downto 0);
    trunc_ln1001_fu_440_p1 <= lshr_ln1001_fu_419_p2(16 - 1 downto 0);
    trunc_ln1074_fu_255_p1 <= tmp_s_fu_247_p3(32 - 1 downto 0);
    trunc_ln1083_fu_277_p1 <= tmp_5_fu_269_p3(32 - 1 downto 0);
    trunc_ln990_fu_301_p1 <= l_fu_285_p3(5 - 1 downto 0);
    trunc_ln994_fu_297_p1 <= sub_ln991_fu_291_p2(8 - 1 downto 0);
    x_V_fu_265_p1 <= tmp_V_4_fu_226_p3(64 - 1 downto 0);
    xor_ln996_fu_370_p2 <= (tmp_10_fu_362_p3 xor ap_const_lv1_1);
    zext_ln1001_1_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1001_fu_425_p2),128));
    zext_ln1001_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1001_fu_410_p2),128));
    zext_ln994_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln994_fu_329_p2),128));
end behav;
