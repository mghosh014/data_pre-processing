// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="long_subtraction,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045-ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.662000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=48,HLS_SYN_FF=1213,HLS_SYN_LUT=2883,HLS_VERSION=2019_2}" *)

module long_subtraction (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_V_dout,
        a_V_empty_n,
        a_V_read,
        b_V_dout,
        b_V_empty_n,
        b_V_read,
        c_V_din,
        c_V_full_n,
        c_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] a_V_dout;
input   a_V_empty_n;
output   a_V_read;
input  [15:0] b_V_dout;
input   b_V_empty_n;
output   b_V_read;
output  [15:0] c_V_din;
input   c_V_full_n;
output   c_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_V_read;
reg b_V_read;
reg c_V_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    a_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] tmp_nbreadreq_fu_120_p3;
wire   [0:0] tmp_1_nbreadreq_fu_128_p3;
reg    b_V_blk_n;
reg    c_V_blk_n;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] tmp_1_reg_535;
reg   [0:0] tmp_1_reg_535_pp0_iter5_reg;
reg    ap_predicate_op22_read_state2;
reg    ap_predicate_op24_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
reg    ap_block_state8_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_1_reg_535_pp0_iter1_reg;
reg   [0:0] tmp_1_reg_535_pp0_iter2_reg;
reg   [0:0] tmp_1_reg_535_pp0_iter3_reg;
reg   [0:0] tmp_1_reg_535_pp0_iter4_reg;
wire   [128:0] ret_V_fu_179_p2;
reg  signed [128:0] ret_V_reg_539;
reg  signed [116:0] trunc_ln_reg_549;
reg   [0:0] p_Result_3_reg_555;
reg   [0:0] p_Result_3_reg_555_pp0_iter3_reg;
reg   [0:0] p_Result_3_reg_555_pp0_iter4_reg;
reg   [0:0] p_Result_3_reg_555_pp0_iter5_reg;
wire   [0:0] icmp_ln982_fu_215_p2;
reg   [0:0] icmp_ln982_reg_561;
reg   [0:0] icmp_ln982_reg_561_pp0_iter4_reg;
reg   [0:0] icmp_ln982_reg_561_pp0_iter5_reg;
wire  signed [117:0] tmp_V_4_fu_226_p3;
reg  signed [117:0] tmp_V_4_reg_566;
reg  signed [117:0] tmp_V_4_reg_566_pp0_iter4_reg;
wire   [31:0] trunc_ln1074_fu_255_p1;
reg   [31:0] trunc_ln1074_reg_571;
wire   [0:0] icmp_ln1075_fu_259_p2;
reg   [0:0] icmp_ln1075_reg_577;
wire   [31:0] trunc_ln1083_fu_277_p1;
reg   [31:0] trunc_ln1083_reg_582;
wire   [31:0] sub_ln991_fu_291_p2;
reg   [31:0] sub_ln991_reg_587;
wire   [7:0] trunc_ln994_fu_297_p1;
reg   [7:0] trunc_ln994_reg_594;
wire   [4:0] trunc_ln990_fu_301_p1;
reg   [4:0] trunc_ln990_reg_599;
reg   [4:0] trunc_ln990_reg_599_pp0_iter5_reg;
reg   [14:0] m_4_reg_604;
reg   [0:0] tmp_12_reg_609;
reg    ap_block_pp0_stage0_subdone;
reg    ap_predicate_tran2to9_state2;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_block_pp0_stage0_01001;
wire   [127:0] d_V_fu_155_p3;
wire   [127:0] e_V_fu_163_p3;
wire  signed [128:0] lhs_V_fu_171_p1;
wire  signed [128:0] rhs_V_fu_175_p1;
wire   [100:0] grp_fu_188_p0;
wire   [228:0] grp_fu_188_p2;
wire  signed [117:0] sext_ln988_fu_212_p1;
wire   [117:0] tmp_V_fu_220_p2;
wire  signed [53:0] tmp_8_fu_233_p4;
wire  signed [63:0] sext_ln1073_fu_243_p1;
reg   [63:0] tmp_s_fu_247_p3;
wire   [63:0] x_V_fu_265_p1;
reg   [63:0] tmp_5_fu_269_p3;
wire   [31:0] NZeros_fu_281_p2;
wire   [31:0] l_fu_285_p3;
wire   [31:0] lsb_index_fu_308_p2;
wire   [30:0] tmp_9_fu_313_p4;
wire   [7:0] sub_ln994_fu_329_p2;
wire   [127:0] zext_ln994_fu_334_p1;
wire  signed [127:0] sext_ln985_fu_305_p1;
wire   [127:0] lshr_ln994_fu_338_p2;
wire   [127:0] p_Result_s_fu_344_p2;
wire   [0:0] icmp_ln994_fu_323_p2;
wire   [0:0] icmp_ln994_1_fu_350_p2;
wire   [0:0] tmp_10_fu_362_p3;
wire   [0:0] p_Result_1_fu_376_p3;
wire   [0:0] xor_ln996_fu_370_p2;
wire   [0:0] and_ln996_fu_384_p2;
wire   [0:0] a_fu_356_p2;
wire   [0:0] or_ln1008_fu_390_p2;
wire   [31:0] add_ln1001_fu_410_p2;
wire   [127:0] zext_ln1001_fu_415_p1;
wire   [31:0] sub_ln1001_fu_425_p2;
wire   [127:0] zext_ln1001_1_fu_430_p1;
wire   [127:0] lshr_ln1001_fu_419_p2;
wire   [127:0] shl_ln1001_fu_434_p2;
wire   [0:0] icmp_ln1001_fu_404_p2;
wire   [15:0] trunc_ln1001_fu_440_p1;
wire   [15:0] trunc_ln1001_1_fu_444_p1;
wire   [15:0] or_ln_fu_396_p3;
wire   [15:0] m_fu_448_p3;
wire   [15:0] m_1_fu_456_p2;
wire   [4:0] sub_ln1011_fu_490_p2;
wire   [4:0] select_ln1011_fu_483_p3;
wire   [4:0] add_ln1011_fu_495_p2;
wire   [15:0] m_5_fu_480_p1;
wire   [5:0] tmp_4_fu_501_p3;
wire   [15:0] p_Result_4_fu_508_p5;
wire   [15:0] bitcast_ln750_fu_520_p1;
reg    grp_fu_188_ce;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

long_subtraction_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 101 ),
    .din1_WIDTH( 129 ),
    .dout_WIDTH( 229 ))
long_subtraction_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_188_p0),
    .din1(ret_V_reg_539),
    .ce(grp_fu_188_ce),
    .dout(grp_fu_188_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_535_pp0_iter2_reg == 1'd1))) begin
        icmp_ln1075_reg_577 <= icmp_ln1075_fu_259_p2;
        icmp_ln982_reg_561 <= icmp_ln982_fu_215_p2;
        tmp_V_4_reg_566 <= tmp_V_4_fu_226_p3;
        trunc_ln1074_reg_571 <= trunc_ln1074_fu_255_p1;
        trunc_ln1083_reg_582 <= trunc_ln1083_fu_277_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln982_reg_561_pp0_iter4_reg <= icmp_ln982_reg_561;
        icmp_ln982_reg_561_pp0_iter5_reg <= icmp_ln982_reg_561_pp0_iter4_reg;
        p_Result_3_reg_555_pp0_iter3_reg <= p_Result_3_reg_555;
        p_Result_3_reg_555_pp0_iter4_reg <= p_Result_3_reg_555_pp0_iter3_reg;
        p_Result_3_reg_555_pp0_iter5_reg <= p_Result_3_reg_555_pp0_iter4_reg;
        tmp_1_reg_535_pp0_iter2_reg <= tmp_1_reg_535_pp0_iter1_reg;
        tmp_1_reg_535_pp0_iter3_reg <= tmp_1_reg_535_pp0_iter2_reg;
        tmp_1_reg_535_pp0_iter4_reg <= tmp_1_reg_535_pp0_iter3_reg;
        tmp_1_reg_535_pp0_iter5_reg <= tmp_1_reg_535_pp0_iter4_reg;
        tmp_V_4_reg_566_pp0_iter4_reg <= tmp_V_4_reg_566;
        trunc_ln990_reg_599_pp0_iter5_reg <= trunc_ln990_reg_599;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_535_pp0_iter4_reg == 1'd1) & (icmp_ln982_reg_561_pp0_iter4_reg == 1'd0))) begin
        m_4_reg_604 <= {{m_1_fu_456_p2[15:1]}};
        tmp_12_reg_609 <= m_1_fu_456_p2[32'd12];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_535_pp0_iter1_reg == 1'd1))) begin
        p_Result_3_reg_555 <= grp_fu_188_p2[32'd228];
        trunc_ln_reg_549 <= {{grp_fu_188_p2[228:112]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_128_p3 == 1'd1) & (tmp_nbreadreq_fu_120_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ret_V_reg_539[128 : 112] <= ret_V_fu_179_p2[128 : 112];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_535_pp0_iter3_reg == 1'd1) & (icmp_ln982_reg_561 == 1'd0))) begin
        sub_ln991_reg_587 <= sub_ln991_fu_291_p2;
        trunc_ln990_reg_599 <= trunc_ln990_fu_301_p1;
        trunc_ln994_reg_594 <= trunc_ln994_fu_297_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_120_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_535 <= tmp_1_nbreadreq_fu_128_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_535_pp0_iter1_reg <= tmp_1_reg_535;
    end
end

always @ (*) begin
    if (((tmp_1_nbreadreq_fu_128_p3 == 1'd1) & (tmp_nbreadreq_fu_120_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_V_blk_n = a_V_empty_n;
    end else begin
        a_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op22_read_state2 == 1'b1))) begin
        a_V_read = 1'b1;
    end else begin
        a_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((ap_predicate_tran2to9_state2 == 1'b1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_nbreadreq_fu_128_p3 == 1'd1) & (tmp_nbreadreq_fu_120_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_V_blk_n = b_V_empty_n;
    end else begin
        b_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op24_read_state2 == 1'b1))) begin
        b_V_read = 1'b1;
    end else begin
        b_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_reg_535_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        c_V_blk_n = c_V_full_n;
    end else begin
        c_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_535_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        c_V_write = 1'b1;
    end else begin
        c_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_188_ce = 1'b1;
    end else begin
        grp_fu_188_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_tran2to9_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_tran2to9_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign NZeros_fu_281_p2 = (trunc_ln1074_reg_571 + trunc_ln1083_reg_582);

assign a_fu_356_p2 = (icmp_ln994_fu_323_p2 & icmp_ln994_1_fu_350_p2);

assign add_ln1001_fu_410_p2 = ($signed(32'd4294967284) + $signed(sub_ln991_reg_587));

assign add_ln1011_fu_495_p2 = (sub_ln1011_fu_490_p2 + select_ln1011_fu_483_p3);

assign and_ln996_fu_384_p2 = (xor_ln996_fu_370_p2 & p_Result_1_fu_376_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_1_reg_535_pp0_iter5_reg == 1'd1) & (c_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((b_V_empty_n == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) | ((1'b0 == a_V_empty_n) & (ap_predicate_op22_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_1_reg_535_pp0_iter5_reg == 1'd1) & (c_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((b_V_empty_n == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) | ((1'b0 == a_V_empty_n) & (ap_predicate_op22_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_1_reg_535_pp0_iter5_reg == 1'd1) & (c_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((b_V_empty_n == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) | ((1'b0 == a_V_empty_n) & (ap_predicate_op22_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((b_V_empty_n == 1'b0) & (ap_predicate_op24_read_state2 == 1'b1)) | ((1'b0 == a_V_empty_n) & (ap_predicate_op22_read_state2 == 1'b1)));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter6 = ((tmp_1_reg_535_pp0_iter5_reg == 1'd1) & (c_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op22_read_state2 = ((tmp_1_nbreadreq_fu_128_p3 == 1'd1) & (tmp_nbreadreq_fu_120_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op24_read_state2 = ((tmp_1_nbreadreq_fu_128_p3 == 1'd1) & (tmp_nbreadreq_fu_120_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_tran2to9_state2 = ((tmp_1_nbreadreq_fu_128_p3 == 1'd0) | (tmp_nbreadreq_fu_120_p3 == 1'd0));
end

assign bitcast_ln750_fu_520_p1 = p_Result_4_fu_508_p5;

assign c_V_din = ((icmp_ln982_reg_561_pp0_iter5_reg[0:0] === 1'b1) ? 16'd0 : bitcast_ln750_fu_520_p1);

assign d_V_fu_155_p3 = {{a_V_dout}, {112'd0}};

assign e_V_fu_163_p3 = {{b_V_dout}, {112'd0}};

assign grp_fu_188_p0 = 229'd763201709380294119597012942848;

assign icmp_ln1001_fu_404_p2 = (($signed(lsb_index_fu_308_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1075_fu_259_p2 = ((tmp_8_fu_233_p4 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln982_fu_215_p2 = ((trunc_ln_reg_549 == 117'd0) ? 1'b1 : 1'b0);

assign icmp_ln994_1_fu_350_p2 = ((p_Result_s_fu_344_p2 != 128'd0) ? 1'b1 : 1'b0);

assign icmp_ln994_fu_323_p2 = (($signed(tmp_9_fu_313_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign l_fu_285_p3 = ((icmp_ln1075_reg_577[0:0] === 1'b1) ? NZeros_fu_281_p2 : trunc_ln1074_reg_571);

assign lhs_V_fu_171_p1 = $signed(d_V_fu_155_p3);

assign lsb_index_fu_308_p2 = ($signed(32'd4294967285) + $signed(sub_ln991_reg_587));

assign lshr_ln1001_fu_419_p2 = sext_ln985_fu_305_p1 >> zext_ln1001_fu_415_p1;

assign lshr_ln994_fu_338_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln994_fu_334_p1;

assign m_1_fu_456_p2 = (or_ln_fu_396_p3 + m_fu_448_p3);

assign m_5_fu_480_p1 = m_4_reg_604;

assign m_fu_448_p3 = ((icmp_ln1001_fu_404_p2[0:0] === 1'b1) ? trunc_ln1001_fu_440_p1 : trunc_ln1001_1_fu_444_p1);

assign or_ln1008_fu_390_p2 = (and_ln996_fu_384_p2 | a_fu_356_p2);

assign or_ln_fu_396_p3 = {{15'd0}, {or_ln1008_fu_390_p2}};

assign p_Result_1_fu_376_p3 = sext_ln985_fu_305_p1[lsb_index_fu_308_p2];

assign p_Result_4_fu_508_p5 = {{tmp_4_fu_501_p3}, {m_5_fu_480_p1[9:0]}};

assign p_Result_s_fu_344_p2 = (sext_ln985_fu_305_p1 & lshr_ln994_fu_338_p2);

assign ret_V_fu_179_p2 = ($signed(lhs_V_fu_171_p1) - $signed(rhs_V_fu_175_p1));

assign rhs_V_fu_175_p1 = $signed(e_V_fu_163_p3);

assign select_ln1011_fu_483_p3 = ((tmp_12_reg_609[0:0] === 1'b1) ? 5'd15 : 5'd14);

assign sext_ln1073_fu_243_p1 = tmp_8_fu_233_p4;

assign sext_ln985_fu_305_p1 = tmp_V_4_reg_566_pp0_iter4_reg;

assign sext_ln988_fu_212_p1 = trunc_ln_reg_549;

assign shl_ln1001_fu_434_p2 = sext_ln985_fu_305_p1 << zext_ln1001_1_fu_430_p1;

assign sub_ln1001_fu_425_p2 = (32'd12 - sub_ln991_reg_587);

assign sub_ln1011_fu_490_p2 = ($signed(5'd16) - $signed(trunc_ln990_reg_599_pp0_iter5_reg));

assign sub_ln991_fu_291_p2 = (32'd128 - l_fu_285_p3);

assign sub_ln994_fu_329_p2 = ($signed(8'd140) - $signed(trunc_ln994_reg_594));

assign tmp_10_fu_362_p3 = lsb_index_fu_308_p2[32'd31];

assign tmp_1_nbreadreq_fu_128_p3 = b_V_empty_n;

assign tmp_4_fu_501_p3 = {{p_Result_3_reg_555_pp0_iter5_reg}, {add_ln1011_fu_495_p2}};

always @ (x_V_fu_265_p1) begin
    if (x_V_fu_265_p1[63] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd0;
    end else if (x_V_fu_265_p1[62] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd1;
    end else if (x_V_fu_265_p1[61] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd2;
    end else if (x_V_fu_265_p1[60] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd3;
    end else if (x_V_fu_265_p1[59] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd4;
    end else if (x_V_fu_265_p1[58] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd5;
    end else if (x_V_fu_265_p1[57] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd6;
    end else if (x_V_fu_265_p1[56] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd7;
    end else if (x_V_fu_265_p1[55] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd8;
    end else if (x_V_fu_265_p1[54] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd9;
    end else if (x_V_fu_265_p1[53] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd10;
    end else if (x_V_fu_265_p1[52] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd11;
    end else if (x_V_fu_265_p1[51] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd12;
    end else if (x_V_fu_265_p1[50] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd13;
    end else if (x_V_fu_265_p1[49] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd14;
    end else if (x_V_fu_265_p1[48] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd15;
    end else if (x_V_fu_265_p1[47] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd16;
    end else if (x_V_fu_265_p1[46] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd17;
    end else if (x_V_fu_265_p1[45] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd18;
    end else if (x_V_fu_265_p1[44] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd19;
    end else if (x_V_fu_265_p1[43] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd20;
    end else if (x_V_fu_265_p1[42] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd21;
    end else if (x_V_fu_265_p1[41] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd22;
    end else if (x_V_fu_265_p1[40] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd23;
    end else if (x_V_fu_265_p1[39] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd24;
    end else if (x_V_fu_265_p1[38] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd25;
    end else if (x_V_fu_265_p1[37] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd26;
    end else if (x_V_fu_265_p1[36] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd27;
    end else if (x_V_fu_265_p1[35] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd28;
    end else if (x_V_fu_265_p1[34] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd29;
    end else if (x_V_fu_265_p1[33] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd30;
    end else if (x_V_fu_265_p1[32] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd31;
    end else if (x_V_fu_265_p1[31] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd32;
    end else if (x_V_fu_265_p1[30] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd33;
    end else if (x_V_fu_265_p1[29] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd34;
    end else if (x_V_fu_265_p1[28] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd35;
    end else if (x_V_fu_265_p1[27] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd36;
    end else if (x_V_fu_265_p1[26] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd37;
    end else if (x_V_fu_265_p1[25] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd38;
    end else if (x_V_fu_265_p1[24] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd39;
    end else if (x_V_fu_265_p1[23] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd40;
    end else if (x_V_fu_265_p1[22] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd41;
    end else if (x_V_fu_265_p1[21] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd42;
    end else if (x_V_fu_265_p1[20] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd43;
    end else if (x_V_fu_265_p1[19] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd44;
    end else if (x_V_fu_265_p1[18] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd45;
    end else if (x_V_fu_265_p1[17] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd46;
    end else if (x_V_fu_265_p1[16] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd47;
    end else if (x_V_fu_265_p1[15] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd48;
    end else if (x_V_fu_265_p1[14] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd49;
    end else if (x_V_fu_265_p1[13] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd50;
    end else if (x_V_fu_265_p1[12] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd51;
    end else if (x_V_fu_265_p1[11] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd52;
    end else if (x_V_fu_265_p1[10] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd53;
    end else if (x_V_fu_265_p1[9] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd54;
    end else if (x_V_fu_265_p1[8] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd55;
    end else if (x_V_fu_265_p1[7] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd56;
    end else if (x_V_fu_265_p1[6] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd57;
    end else if (x_V_fu_265_p1[5] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd58;
    end else if (x_V_fu_265_p1[4] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd59;
    end else if (x_V_fu_265_p1[3] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd60;
    end else if (x_V_fu_265_p1[2] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd61;
    end else if (x_V_fu_265_p1[1] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd62;
    end else if (x_V_fu_265_p1[0] == 1'b1) begin
        tmp_5_fu_269_p3 = 64'd63;
    end else begin
        tmp_5_fu_269_p3 = 64'd64;
    end
end

assign tmp_8_fu_233_p4 = {{tmp_V_4_fu_226_p3[117:64]}};

assign tmp_9_fu_313_p4 = {{lsb_index_fu_308_p2[31:1]}};

assign tmp_V_4_fu_226_p3 = ((p_Result_3_reg_555[0:0] === 1'b1) ? tmp_V_fu_220_p2 : sext_ln988_fu_212_p1);

assign tmp_V_fu_220_p2 = ($signed(118'd0) - $signed(sext_ln988_fu_212_p1));

assign tmp_nbreadreq_fu_120_p3 = a_V_empty_n;

always @ (sext_ln1073_fu_243_p1) begin
    if (sext_ln1073_fu_243_p1[63] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd0;
    end else if (sext_ln1073_fu_243_p1[62] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd1;
    end else if (sext_ln1073_fu_243_p1[61] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd2;
    end else if (sext_ln1073_fu_243_p1[60] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd3;
    end else if (sext_ln1073_fu_243_p1[59] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd4;
    end else if (sext_ln1073_fu_243_p1[58] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd5;
    end else if (sext_ln1073_fu_243_p1[57] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd6;
    end else if (sext_ln1073_fu_243_p1[56] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd7;
    end else if (sext_ln1073_fu_243_p1[55] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd8;
    end else if (sext_ln1073_fu_243_p1[54] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd9;
    end else if (sext_ln1073_fu_243_p1[53] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd10;
    end else if (sext_ln1073_fu_243_p1[52] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd11;
    end else if (sext_ln1073_fu_243_p1[51] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd12;
    end else if (sext_ln1073_fu_243_p1[50] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd13;
    end else if (sext_ln1073_fu_243_p1[49] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd14;
    end else if (sext_ln1073_fu_243_p1[48] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd15;
    end else if (sext_ln1073_fu_243_p1[47] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd16;
    end else if (sext_ln1073_fu_243_p1[46] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd17;
    end else if (sext_ln1073_fu_243_p1[45] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd18;
    end else if (sext_ln1073_fu_243_p1[44] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd19;
    end else if (sext_ln1073_fu_243_p1[43] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd20;
    end else if (sext_ln1073_fu_243_p1[42] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd21;
    end else if (sext_ln1073_fu_243_p1[41] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd22;
    end else if (sext_ln1073_fu_243_p1[40] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd23;
    end else if (sext_ln1073_fu_243_p1[39] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd24;
    end else if (sext_ln1073_fu_243_p1[38] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd25;
    end else if (sext_ln1073_fu_243_p1[37] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd26;
    end else if (sext_ln1073_fu_243_p1[36] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd27;
    end else if (sext_ln1073_fu_243_p1[35] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd28;
    end else if (sext_ln1073_fu_243_p1[34] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd29;
    end else if (sext_ln1073_fu_243_p1[33] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd30;
    end else if (sext_ln1073_fu_243_p1[32] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd31;
    end else if (sext_ln1073_fu_243_p1[31] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd32;
    end else if (sext_ln1073_fu_243_p1[30] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd33;
    end else if (sext_ln1073_fu_243_p1[29] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd34;
    end else if (sext_ln1073_fu_243_p1[28] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd35;
    end else if (sext_ln1073_fu_243_p1[27] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd36;
    end else if (sext_ln1073_fu_243_p1[26] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd37;
    end else if (sext_ln1073_fu_243_p1[25] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd38;
    end else if (sext_ln1073_fu_243_p1[24] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd39;
    end else if (sext_ln1073_fu_243_p1[23] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd40;
    end else if (sext_ln1073_fu_243_p1[22] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd41;
    end else if (sext_ln1073_fu_243_p1[21] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd42;
    end else if (sext_ln1073_fu_243_p1[20] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd43;
    end else if (sext_ln1073_fu_243_p1[19] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd44;
    end else if (sext_ln1073_fu_243_p1[18] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd45;
    end else if (sext_ln1073_fu_243_p1[17] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd46;
    end else if (sext_ln1073_fu_243_p1[16] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd47;
    end else if (sext_ln1073_fu_243_p1[15] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd48;
    end else if (sext_ln1073_fu_243_p1[14] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd49;
    end else if (sext_ln1073_fu_243_p1[13] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd50;
    end else if (sext_ln1073_fu_243_p1[12] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd51;
    end else if (sext_ln1073_fu_243_p1[11] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd52;
    end else if (sext_ln1073_fu_243_p1[10] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd53;
    end else if (sext_ln1073_fu_243_p1[9] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd54;
    end else if (sext_ln1073_fu_243_p1[8] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd55;
    end else if (sext_ln1073_fu_243_p1[7] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd56;
    end else if (sext_ln1073_fu_243_p1[6] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd57;
    end else if (sext_ln1073_fu_243_p1[5] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd58;
    end else if (sext_ln1073_fu_243_p1[4] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd59;
    end else if (sext_ln1073_fu_243_p1[3] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd60;
    end else if (sext_ln1073_fu_243_p1[2] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd61;
    end else if (sext_ln1073_fu_243_p1[1] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd62;
    end else if (sext_ln1073_fu_243_p1[0] == 1'b1) begin
        tmp_s_fu_247_p3 = 64'd63;
    end else begin
        tmp_s_fu_247_p3 = 64'd64;
    end
end

assign trunc_ln1001_1_fu_444_p1 = shl_ln1001_fu_434_p2[15:0];

assign trunc_ln1001_fu_440_p1 = lshr_ln1001_fu_419_p2[15:0];

assign trunc_ln1074_fu_255_p1 = tmp_s_fu_247_p3[31:0];

assign trunc_ln1083_fu_277_p1 = tmp_5_fu_269_p3[31:0];

assign trunc_ln990_fu_301_p1 = l_fu_285_p3[4:0];

assign trunc_ln994_fu_297_p1 = sub_ln991_fu_291_p2[7:0];

assign x_V_fu_265_p1 = tmp_V_4_fu_226_p3[63:0];

assign xor_ln996_fu_370_p2 = (tmp_10_fu_362_p3 ^ 1'd1);

assign zext_ln1001_1_fu_430_p1 = sub_ln1001_fu_425_p2;

assign zext_ln1001_fu_415_p1 = add_ln1001_fu_410_p2;

assign zext_ln994_fu_334_p1 = sub_ln994_fu_329_p2;

always @ (posedge ap_clk) begin
    ret_V_reg_539[111:0] <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //long_subtraction
