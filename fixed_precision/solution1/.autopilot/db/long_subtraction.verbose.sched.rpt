

================================================================
== Vivado HLS Report for 'long_subtraction'
================================================================
* Date:           Wed Aug 18 13:55:52 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        LS
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z045-ffg900-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.662 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        ?|        ?|         7|          1|          1|     ?|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 9 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 2 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(half* %c_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 10 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %b_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 11 'specinterface' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %a_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 12 'specinterface' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %a_V), !map !172"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %b_V), !map !176"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(half* %c_V), !map !180"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([17 x i8]* @long_subtraction_str) nounwind"   --->   Operation 16 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "br label %0" [LS/core.cpp:21]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.56>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_NbReadReq.ap_fifo.i16P(i16* %a_V, i32 1)" [LS/core.cpp:21]   --->   Operation 18 'nbreadreq' 'tmp' <Predicate = true> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 0> <FIFO>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %tmp, label %1, label %.critedge" [LS/core.cpp:21]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_NbReadReq.ap_fifo.i16P(i16* %b_V, i32 1)" [LS/core.cpp:21]   --->   Operation 20 'nbreadreq' 'tmp_1' <Predicate = (tmp)> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 0> <FIFO>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %hls_label_0, label %.critedge" [LS/core.cpp:21]   --->   Operation 21 'br' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (3.40ns)   --->   "%tmp_14 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %a_V)" [LS/core.cpp:28]   --->   Operation 22 'read' 'tmp_14' <Predicate = (tmp & tmp_1)> <Delay = 3.40> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 0> <FIFO>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%d_V = call i128 @_ssdm_op_BitConcatenate.i128.i16.i112(i16 %tmp_14, i112 0)" [LS/core.cpp:28]   --->   Operation 23 'bitconcatenate' 'd_V' <Predicate = (tmp & tmp_1)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (3.40ns)   --->   "%tmp_15 = call i16 @_ssdm_op_Read.ap_fifo.volatile.i16P(i16* %b_V)" [LS/core.cpp:29]   --->   Operation 24 'read' 'tmp_15' <Predicate = (tmp & tmp_1)> <Delay = 3.40> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 0> <FIFO>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%e_V = call i128 @_ssdm_op_BitConcatenate.i128.i16.i112(i16 %tmp_15, i112 0)" [LS/core.cpp:29]   --->   Operation 25 'bitconcatenate' 'e_V' <Predicate = (tmp & tmp_1)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%lhs_V = sext i128 %d_V to i129" [LS/core.cpp:30]   --->   Operation 26 'sext' 'lhs_V' <Predicate = (tmp & tmp_1)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%rhs_V = sext i128 %e_V to i129" [LS/core.cpp:30]   --->   Operation 27 'sext' 'rhs_V' <Predicate = (tmp & tmp_1)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (4.16ns)   --->   "%ret_V = sub nsw i129 %lhs_V, %rhs_V" [LS/core.cpp:30]   --->   Operation 28 'sub' 'ret_V' <Predicate = (tmp & tmp_1)> <Delay = 4.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.66>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i129 %ret_V to i229" [LS/core.cpp:30]   --->   Operation 29 'sext' 'sext_ln1118' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : Operation 30 [2/2] (8.66ns)   --->   "%r_V = mul i229 763201709380294119597012942848, %sext_ln1118" [LS/core.cpp:30]   --->   Operation 30 'mul' 'r_V' <Predicate = (tmp_1)> <Delay = 8.66> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 8.66> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.66>
ST_4 : Operation 31 [1/2] (8.66ns)   --->   "%r_V = mul i229 763201709380294119597012942848, %sext_ln1118" [LS/core.cpp:30]   --->   Operation 31 'mul' 'r_V' <Predicate = (tmp_1)> <Delay = 8.66> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 8.66> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln = call i117 @_ssdm_op_PartSelect.i117.i229.i32.i32(i229 %r_V, i32 112, i32 228)" [LS/core.cpp:30]   --->   Operation 32 'partselect' 'trunc_ln' <Predicate = (tmp_1)> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%p_Result_3 = call i1 @_ssdm_op_BitSelect.i1.i229.i32(i229 %r_V, i32 228)" [LS/core.cpp:32]   --->   Operation 33 'bitselect' 'p_Result_3' <Predicate = (tmp_1)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.51>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%sext_ln988 = sext i117 %trunc_ln to i118" [LS/core.cpp:32]   --->   Operation 34 'sext' 'sext_ln988' <Predicate = (tmp_1)> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (2.72ns)   --->   "%icmp_ln982 = icmp eq i117 %trunc_ln, 0" [LS/core.cpp:32]   --->   Operation 35 'icmp' 'icmp_ln982' <Predicate = (tmp_1)> <Delay = 2.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 36 [1/1] (3.94ns)   --->   "%tmp_V = sub i118 0, %sext_ln988" [LS/core.cpp:32]   --->   Operation 36 'sub' 'tmp_V' <Predicate = (tmp_1 & p_Result_3)> <Delay = 3.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 37 [1/1] (1.33ns)   --->   "%tmp_V_4 = select i1 %p_Result_3, i118 %tmp_V, i118 %sext_ln988" [LS/core.cpp:32]   --->   Operation 37 'select' 'tmp_V_4' <Predicate = (tmp_1)> <Delay = 1.33> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_8 = call i54 @_ssdm_op_PartSelect.i54.i118.i32.i32(i118 %tmp_V_4, i32 64, i32 117)" [LS/core.cpp:32]   --->   Operation 38 'partselect' 'tmp_8' <Predicate = (tmp_1)> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%sext_ln1073 = sext i54 %tmp_8 to i64" [LS/core.cpp:32]   --->   Operation 39 'sext' 'sext_ln1073' <Predicate = (tmp_1)> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (3.22ns)   --->   "%tmp_s = call i64 @llvm.ctlz.i64(i64 %sext_ln1073, i1 true) nounwind" [LS/core.cpp:32]   --->   Operation 40 'ctlz' 'tmp_s' <Predicate = (tmp_1)> <Delay = 3.22> <Core = "CTLZ">   --->   Core 63 'CTLZ' <Latency = 0> <II = 1> <Delay = 3.23> <FuncUnit> <Opcode : 'ctlz'> <InPorts = 1> <OutPorts = 1>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln1074 = trunc i64 %tmp_s to i32" [LS/core.cpp:32]   --->   Operation 41 'trunc' 'trunc_ln1074' <Predicate = (tmp_1)> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (2.24ns)   --->   "%icmp_ln1075 = icmp eq i54 %tmp_8, 0" [LS/core.cpp:32]   --->   Operation 42 'icmp' 'icmp_ln1075' <Predicate = (tmp_1)> <Delay = 2.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (0.00ns)   --->   "%x_V = trunc i118 %tmp_V_4 to i64" [LS/core.cpp:32]   --->   Operation 43 'trunc' 'x_V' <Predicate = (tmp_1)> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (3.23ns)   --->   "%tmp_5 = call i64 @llvm.ctlz.i64(i64 %x_V, i1 true) nounwind" [LS/core.cpp:32]   --->   Operation 44 'ctlz' 'tmp_5' <Predicate = (tmp_1)> <Delay = 3.23> <Core = "CTLZ">   --->   Core 63 'CTLZ' <Latency = 0> <II = 1> <Delay = 3.23> <FuncUnit> <Opcode : 'ctlz'> <InPorts = 1> <OutPorts = 1>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln1083 = trunc i64 %tmp_5 to i32" [LS/core.cpp:32]   --->   Operation 45 'trunc' 'trunc_ln1083' <Predicate = (tmp_1)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.49>
ST_6 : Operation 46 [1/1] (1.89ns)   --->   "%NZeros = add nsw i32 %trunc_ln1074, %trunc_ln1083" [LS/core.cpp:32]   --->   Operation 46 'add' 'NZeros' <Predicate = (tmp_1 & icmp_ln1075 & !icmp_ln982)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 47 [1/1] (0.70ns)   --->   "%l = select i1 %icmp_ln1075, i32 %NZeros, i32 %trunc_ln1074" [LS/core.cpp:32]   --->   Operation 47 'select' 'l' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 48 [1/1] (1.89ns)   --->   "%sub_ln991 = sub nsw i32 128, %l" [LS/core.cpp:32]   --->   Operation 48 'sub' 'sub_ln991' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln994 = trunc i32 %sub_ln991 to i8" [LS/core.cpp:32]   --->   Operation 49 'trunc' 'trunc_ln994' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln990 = trunc i32 %l to i5" [LS/core.cpp:32]   --->   Operation 50 'trunc' 'trunc_ln990' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 8.51>
ST_7 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln985 = sext i118 %tmp_V_4 to i128" [LS/core.cpp:32]   --->   Operation 51 'sext' 'sext_ln985' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 52 [1/1] (1.89ns)   --->   "%lsb_index = add nsw i32 -11, %sub_ln991" [LS/core.cpp:32]   --->   Operation 52 'add' 'lsb_index' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_9 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [LS/core.cpp:32]   --->   Operation 53 'partselect' 'tmp_9' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 54 [1/1] (1.96ns)   --->   "%icmp_ln994 = icmp sgt i31 %tmp_9, 0" [LS/core.cpp:32]   --->   Operation 54 'icmp' 'icmp_ln994' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 55 [1/1] (1.30ns)   --->   "%sub_ln994 = sub i8 -116, %trunc_ln994" [LS/core.cpp:32]   --->   Operation 55 'sub' 'sub_ln994' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln994_1)   --->   "%zext_ln994 = zext i8 %sub_ln994 to i128" [LS/core.cpp:32]   --->   Operation 56 'zext' 'zext_ln994' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln994_1)   --->   "%lshr_ln994 = lshr i128 -1, %zext_ln994" [LS/core.cpp:32]   --->   Operation 57 'lshr' 'lshr_ln994' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.62> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln994_1)   --->   "%p_Result_s = and i128 %sext_ln985, %lshr_ln994" [LS/core.cpp:32]   --->   Operation 58 'and' 'p_Result_s' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 59 [1/1] (2.79ns) (out node of the LUT)   --->   "%icmp_ln994_1 = icmp ne i128 %p_Result_s, 0" [LS/core.cpp:32]   --->   Operation 59 'icmp' 'icmp_ln994_1' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 2.79> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln994, %icmp_ln994_1" [LS/core.cpp:32]   --->   Operation 60 'and' 'a' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [LS/core.cpp:32]   --->   Operation 61 'bitselect' 'tmp_10' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln996 = xor i1 %tmp_10, true" [LS/core.cpp:32]   --->   Operation 62 'xor' 'xor_ln996' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_1 = call i1 @_ssdm_op_BitSelect.i1.i128.i32(i128 %sext_ln985, i32 %lsb_index)" [LS/core.cpp:32]   --->   Operation 63 'bitselect' 'p_Result_1' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln996 = and i1 %p_Result_1, %xor_ln996" [LS/core.cpp:32]   --->   Operation 64 'and' 'and_ln996' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln1008 = or i1 %and_ln996, %a" [LS/core.cpp:32]   --->   Operation 65 'or' 'or_ln1008' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 66 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln = call i16 @_ssdm_op_BitConcatenate.i16.i15.i1(i15 0, i1 %or_ln1008)" [LS/core.cpp:32]   --->   Operation 66 'bitconcatenate' 'or_ln' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.80>
ST_7 : Operation 67 [1/1] (1.96ns)   --->   "%icmp_ln1001 = icmp sgt i32 %lsb_index, 0" [LS/core.cpp:32]   --->   Operation 67 'icmp' 'icmp_ln1001' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 68 [1/1] (1.89ns)   --->   "%add_ln1001 = add nsw i32 -12, %sub_ln991" [LS/core.cpp:32]   --->   Operation 68 'add' 'add_ln1001' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node m_1)   --->   "%zext_ln1001 = zext i32 %add_ln1001 to i128" [LS/core.cpp:32]   --->   Operation 69 'zext' 'zext_ln1001' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node m_1)   --->   "%lshr_ln1001 = lshr i128 %sext_ln985, %zext_ln1001" [LS/core.cpp:32]   --->   Operation 70 'lshr' 'lshr_ln1001' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.62> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 71 [1/1] (1.89ns)   --->   "%sub_ln1001 = sub i32 12, %sub_ln991" [LS/core.cpp:32]   --->   Operation 71 'sub' 'sub_ln1001' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node m_1)   --->   "%zext_ln1001_1 = zext i32 %sub_ln1001 to i128" [LS/core.cpp:32]   --->   Operation 72 'zext' 'zext_ln1001_1' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node m_1)   --->   "%shl_ln1001 = shl i128 %sext_ln985, %zext_ln1001_1" [LS/core.cpp:32]   --->   Operation 73 'shl' 'shl_ln1001' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.62> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node m_1)   --->   "%trunc_ln1001 = trunc i128 %lshr_ln1001 to i16" [LS/core.cpp:32]   --->   Operation 74 'trunc' 'trunc_ln1001' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node m_1)   --->   "%trunc_ln1001_1 = trunc i128 %shl_ln1001 to i16" [LS/core.cpp:32]   --->   Operation 75 'trunc' 'trunc_ln1001_1' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node m_1)   --->   "%m = select i1 %icmp_ln1001, i16 %trunc_ln1001, i16 %trunc_ln1001_1" [LS/core.cpp:32]   --->   Operation 76 'select' 'm' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 77 [1/1] (3.62ns) (out node of the LUT)   --->   "%m_1 = add i16 %or_ln, %m" [LS/core.cpp:32]   --->   Operation 77 'add' 'm_1' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 3.62> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 78 [1/1] (0.00ns)   --->   "%m_4 = call i15 @_ssdm_op_PartSelect.i15.i16.i32.i32(i16 %m_1, i32 1, i32 15)" [LS/core.cpp:32]   --->   Operation 78 'partselect' 'm_4' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %m_1, i32 12)" [LS/core.cpp:32]   --->   Operation 79 'bitselect' 'tmp_12' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 7.79>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1)" [LS/core.cpp:22]   --->   Operation 80 'specregionbegin' 'tmp_6' <Predicate = (tmp_1)> <Delay = 0.00>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [LS/core.cpp:23]   --->   Operation 81 'specpipeline' <Predicate = (tmp_1)> <Delay = 0.00>
ST_8 : Operation 82 [1/1] (0.00ns)   --->   "%m_5 = zext i15 %m_4 to i16" [LS/core.cpp:32]   --->   Operation 82 'zext' 'm_5' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_8 : Operation 83 [1/1] (0.97ns)   --->   "%select_ln1011 = select i1 %tmp_12, i5 15, i5 14" [LS/core.cpp:32]   --->   Operation 83 'select' 'select_ln1011' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 84 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln1011 = sub i5 -16, %trunc_ln990" [LS/core.cpp:32]   --->   Operation 84 'sub' 'sub_ln1011' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.39> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 85 [1/1] (2.79ns) (root node of TernaryAdder)   --->   "%add_ln1011 = add i5 %sub_ln1011, %select_ln1011" [LS/core.cpp:32]   --->   Operation 85 'add' 'add_ln1011' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 2.79> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.39> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_4 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i5(i1 %p_Result_3, i5 %add_ln1011)" [LS/core.cpp:32]   --->   Operation 86 'bitconcatenate' 'tmp_4' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_8 : Operation 87 [1/1] (0.00ns)   --->   "%p_Result_4 = call i16 @_ssdm_op_PartSet.i16.i16.i6.i32.i32(i16 %m_5, i6 %tmp_4, i32 10, i32 15)" [LS/core.cpp:32]   --->   Operation 87 'partset' 'p_Result_4' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_8 : Operation 88 [1/1] (0.00ns)   --->   "%bitcast_ln750 = bitcast i16 %p_Result_4 to half" [LS/core.cpp:32]   --->   Operation 88 'bitcast' 'bitcast_ln750' <Predicate = (tmp_1 & !icmp_ln982)> <Delay = 0.00>
ST_8 : Operation 89 [1/1] (0.62ns)   --->   "%tmp_13 = select i1 %icmp_ln982, half 0x0, half %bitcast_ln750" [LS/core.cpp:32]   --->   Operation 89 'select' 'tmp_13' <Predicate = (tmp_1)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 90 [1/1] (3.40ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.halfP(half* %c_V, half %tmp_13)" [LS/core.cpp:32]   --->   Operation 90 'write' <Predicate = (tmp_1)> <Delay = 3.40> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 0> <FIFO>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1, i32 %tmp_6)" [LS/core.cpp:33]   --->   Operation 91 'specregionend' 'empty_17' <Predicate = (tmp_1)> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "br label %0" [LS/core.cpp:33]   --->   Operation 92 'br' <Predicate = (tmp_1)> <Delay = 0.00>

State 9 <SV = 2> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "ret void" [LS/core.cpp:34]   --->   Operation 93 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 7.57ns
The critical path consists of the following:
	fifo read on port 'a_V' (LS/core.cpp:28) [21]  (3.4 ns)
	'sub' operation ('ret.V', LS/core.cpp:30) [27]  (4.17 ns)

 <State 3>: 8.66ns
The critical path consists of the following:
	'mul' operation ('r.V', LS/core.cpp:30) [29]  (8.66 ns)

 <State 4>: 8.66ns
The critical path consists of the following:
	'mul' operation ('r.V', LS/core.cpp:30) [29]  (8.66 ns)

 <State 5>: 8.52ns
The critical path consists of the following:
	'sub' operation ('tmp.V', LS/core.cpp:32) [34]  (3.95 ns)
	'select' operation ('tmp.V', LS/core.cpp:32) [35]  (1.33 ns)
	'ctlz' operation ('tmp_5', LS/core.cpp:32) [43]  (3.23 ns)

 <State 6>: 4.5ns
The critical path consists of the following:
	'add' operation ('NZeros', LS/core.cpp:32) [45]  (1.9 ns)
	'select' operation ('l', LS/core.cpp:32) [46]  (0.705 ns)
	'sub' operation ('sub_ln991', LS/core.cpp:32) [47]  (1.9 ns)

 <State 7>: 8.52ns
The critical path consists of the following:
	'sub' operation ('sub_ln994', LS/core.cpp:32) [52]  (1.31 ns)
	'lshr' operation ('lshr_ln994', LS/core.cpp:32) [54]  (0 ns)
	'and' operation ('__Result__', LS/core.cpp:32) [55]  (0 ns)
	'icmp' operation ('icmp_ln994_1', LS/core.cpp:32) [56]  (2.79 ns)
	'and' operation ('a', LS/core.cpp:32) [57]  (0 ns)
	'or' operation ('or_ln1008', LS/core.cpp:32) [62]  (0 ns)
	'add' operation ('m', LS/core.cpp:32) [74]  (3.62 ns)
	blocking operation 0.8 ns on control path)

 <State 8>: 7.8ns
The critical path consists of the following:
	'select' operation ('select_ln1011', LS/core.cpp:32) [78]  (0.976 ns)
	'add' operation ('add_ln1011', LS/core.cpp:32) [81]  (2.79 ns)
	'select' operation ('tmp', LS/core.cpp:32) [85]  (0.627 ns)
	fifo write on port 'c_V' (LS/core.cpp:32) [86]  (3.4 ns)

 <State 9>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
