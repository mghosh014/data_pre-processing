// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _long_subtraction_HH_
#define _long_subtraction_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "long_subtraction_bkb.h"

namespace ap_rtl {

struct long_subtraction : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > a_V_dout;
    sc_in< sc_logic > a_V_empty_n;
    sc_out< sc_logic > a_V_read;
    sc_in< sc_lv<16> > b_V_dout;
    sc_in< sc_logic > b_V_empty_n;
    sc_out< sc_logic > b_V_read;
    sc_out< sc_lv<16> > c_V_din;
    sc_in< sc_logic > c_V_full_n;
    sc_out< sc_logic > c_V_write;


    // Module declarations
    long_subtraction(sc_module_name name);
    SC_HAS_PROCESS(long_subtraction);

    ~long_subtraction();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    long_subtraction_bkb<1,2,101,129,229>* long_subtraction_bkb_U1;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > a_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_120_p3;
    sc_signal< sc_lv<1> > tmp_1_nbreadreq_fu_128_p3;
    sc_signal< sc_logic > b_V_blk_n;
    sc_signal< sc_logic > c_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<1> > tmp_1_reg_535;
    sc_signal< sc_lv<1> > tmp_1_reg_535_pp0_iter5_reg;
    sc_signal< bool > ap_predicate_op22_read_state2;
    sc_signal< bool > ap_predicate_op24_read_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > tmp_1_reg_535_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_1_reg_535_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_1_reg_535_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_1_reg_535_pp0_iter4_reg;
    sc_signal< sc_lv<129> > ret_V_fu_179_p2;
    sc_signal< sc_lv<129> > ret_V_reg_539;
    sc_signal< sc_lv<117> > trunc_ln_reg_549;
    sc_signal< sc_lv<1> > p_Result_3_reg_555;
    sc_signal< sc_lv<1> > p_Result_3_reg_555_pp0_iter3_reg;
    sc_signal< sc_lv<1> > p_Result_3_reg_555_pp0_iter4_reg;
    sc_signal< sc_lv<1> > p_Result_3_reg_555_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln982_fu_215_p2;
    sc_signal< sc_lv<1> > icmp_ln982_reg_561;
    sc_signal< sc_lv<1> > icmp_ln982_reg_561_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln982_reg_561_pp0_iter5_reg;
    sc_signal< sc_lv<118> > tmp_V_4_fu_226_p3;
    sc_signal< sc_lv<118> > tmp_V_4_reg_566;
    sc_signal< sc_lv<118> > tmp_V_4_reg_566_pp0_iter4_reg;
    sc_signal< sc_lv<32> > trunc_ln1074_fu_255_p1;
    sc_signal< sc_lv<32> > trunc_ln1074_reg_571;
    sc_signal< sc_lv<1> > icmp_ln1075_fu_259_p2;
    sc_signal< sc_lv<1> > icmp_ln1075_reg_577;
    sc_signal< sc_lv<32> > trunc_ln1083_fu_277_p1;
    sc_signal< sc_lv<32> > trunc_ln1083_reg_582;
    sc_signal< sc_lv<32> > sub_ln991_fu_291_p2;
    sc_signal< sc_lv<32> > sub_ln991_reg_587;
    sc_signal< sc_lv<8> > trunc_ln994_fu_297_p1;
    sc_signal< sc_lv<8> > trunc_ln994_reg_594;
    sc_signal< sc_lv<5> > trunc_ln990_fu_301_p1;
    sc_signal< sc_lv<5> > trunc_ln990_reg_599;
    sc_signal< sc_lv<5> > trunc_ln990_reg_599_pp0_iter5_reg;
    sc_signal< sc_lv<15> > m_4_reg_604;
    sc_signal< sc_lv<1> > tmp_12_reg_609;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_predicate_tran2to9_state2;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<128> > d_V_fu_155_p3;
    sc_signal< sc_lv<128> > e_V_fu_163_p3;
    sc_signal< sc_lv<129> > lhs_V_fu_171_p1;
    sc_signal< sc_lv<129> > rhs_V_fu_175_p1;
    sc_signal< sc_lv<101> > grp_fu_188_p0;
    sc_signal< sc_lv<229> > grp_fu_188_p2;
    sc_signal< sc_lv<118> > sext_ln988_fu_212_p1;
    sc_signal< sc_lv<118> > tmp_V_fu_220_p2;
    sc_signal< sc_lv<54> > tmp_8_fu_233_p4;
    sc_signal< sc_lv<64> > sext_ln1073_fu_243_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_247_p3;
    sc_signal< sc_lv<64> > x_V_fu_265_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_269_p3;
    sc_signal< sc_lv<32> > NZeros_fu_281_p2;
    sc_signal< sc_lv<32> > l_fu_285_p3;
    sc_signal< sc_lv<32> > lsb_index_fu_308_p2;
    sc_signal< sc_lv<31> > tmp_9_fu_313_p4;
    sc_signal< sc_lv<8> > sub_ln994_fu_329_p2;
    sc_signal< sc_lv<128> > zext_ln994_fu_334_p1;
    sc_signal< sc_lv<128> > sext_ln985_fu_305_p1;
    sc_signal< sc_lv<128> > lshr_ln994_fu_338_p2;
    sc_signal< sc_lv<128> > p_Result_s_fu_344_p2;
    sc_signal< sc_lv<1> > icmp_ln994_fu_323_p2;
    sc_signal< sc_lv<1> > icmp_ln994_1_fu_350_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_362_p3;
    sc_signal< sc_lv<1> > p_Result_1_fu_376_p3;
    sc_signal< sc_lv<1> > xor_ln996_fu_370_p2;
    sc_signal< sc_lv<1> > and_ln996_fu_384_p2;
    sc_signal< sc_lv<1> > a_fu_356_p2;
    sc_signal< sc_lv<1> > or_ln1008_fu_390_p2;
    sc_signal< sc_lv<32> > add_ln1001_fu_410_p2;
    sc_signal< sc_lv<128> > zext_ln1001_fu_415_p1;
    sc_signal< sc_lv<32> > sub_ln1001_fu_425_p2;
    sc_signal< sc_lv<128> > zext_ln1001_1_fu_430_p1;
    sc_signal< sc_lv<128> > lshr_ln1001_fu_419_p2;
    sc_signal< sc_lv<128> > shl_ln1001_fu_434_p2;
    sc_signal< sc_lv<1> > icmp_ln1001_fu_404_p2;
    sc_signal< sc_lv<16> > trunc_ln1001_fu_440_p1;
    sc_signal< sc_lv<16> > trunc_ln1001_1_fu_444_p1;
    sc_signal< sc_lv<16> > or_ln_fu_396_p3;
    sc_signal< sc_lv<16> > m_fu_448_p3;
    sc_signal< sc_lv<16> > m_1_fu_456_p2;
    sc_signal< sc_lv<5> > sub_ln1011_fu_490_p2;
    sc_signal< sc_lv<5> > select_ln1011_fu_483_p3;
    sc_signal< sc_lv<5> > add_ln1011_fu_495_p2;
    sc_signal< sc_lv<16> > m_5_fu_480_p1;
    sc_signal< sc_lv<6> > tmp_4_fu_501_p3;
    sc_signal< sc_lv<16> > p_Result_4_fu_508_p5;
    sc_signal< sc_lv<16> > bitcast_ln750_fu_520_p1;
    sc_signal< sc_logic > grp_fu_188_ce;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<112> ap_const_lv112_0;
    static const sc_lv<229> ap_const_lv229_lc_1;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_E4;
    static const sc_lv<117> ap_const_lv117_0;
    static const sc_lv<118> ap_const_lv118_0;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_75;
    static const sc_lv<54> ap_const_lv54_0;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_FFFFFFF5;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<8> ap_const_lv8_8C;
    static const sc_lv<128> ap_const_lv128_lc_2;
    static const sc_lv<128> ap_const_lv128_lc_3;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFF4;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_NZeros_fu_281_p2();
    void thread_a_V_blk_n();
    void thread_a_V_read();
    void thread_a_fu_356_p2();
    void thread_add_ln1001_fu_410_p2();
    void thread_add_ln1011_fu_495_p2();
    void thread_and_ln996_fu_384_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op22_read_state2();
    void thread_ap_predicate_op24_read_state2();
    void thread_ap_predicate_tran2to9_state2();
    void thread_ap_ready();
    void thread_b_V_blk_n();
    void thread_b_V_read();
    void thread_bitcast_ln750_fu_520_p1();
    void thread_c_V_blk_n();
    void thread_c_V_din();
    void thread_c_V_write();
    void thread_d_V_fu_155_p3();
    void thread_e_V_fu_163_p3();
    void thread_grp_fu_188_ce();
    void thread_grp_fu_188_p0();
    void thread_icmp_ln1001_fu_404_p2();
    void thread_icmp_ln1075_fu_259_p2();
    void thread_icmp_ln982_fu_215_p2();
    void thread_icmp_ln994_1_fu_350_p2();
    void thread_icmp_ln994_fu_323_p2();
    void thread_l_fu_285_p3();
    void thread_lhs_V_fu_171_p1();
    void thread_lsb_index_fu_308_p2();
    void thread_lshr_ln1001_fu_419_p2();
    void thread_lshr_ln994_fu_338_p2();
    void thread_m_1_fu_456_p2();
    void thread_m_5_fu_480_p1();
    void thread_m_fu_448_p3();
    void thread_or_ln1008_fu_390_p2();
    void thread_or_ln_fu_396_p3();
    void thread_p_Result_1_fu_376_p3();
    void thread_p_Result_4_fu_508_p5();
    void thread_p_Result_s_fu_344_p2();
    void thread_ret_V_fu_179_p2();
    void thread_rhs_V_fu_175_p1();
    void thread_select_ln1011_fu_483_p3();
    void thread_sext_ln1073_fu_243_p1();
    void thread_sext_ln985_fu_305_p1();
    void thread_sext_ln988_fu_212_p1();
    void thread_shl_ln1001_fu_434_p2();
    void thread_sub_ln1001_fu_425_p2();
    void thread_sub_ln1011_fu_490_p2();
    void thread_sub_ln991_fu_291_p2();
    void thread_sub_ln994_fu_329_p2();
    void thread_tmp_10_fu_362_p3();
    void thread_tmp_1_nbreadreq_fu_128_p3();
    void thread_tmp_4_fu_501_p3();
    void thread_tmp_5_fu_269_p3();
    void thread_tmp_8_fu_233_p4();
    void thread_tmp_9_fu_313_p4();
    void thread_tmp_V_4_fu_226_p3();
    void thread_tmp_V_fu_220_p2();
    void thread_tmp_nbreadreq_fu_120_p3();
    void thread_tmp_s_fu_247_p3();
    void thread_trunc_ln1001_1_fu_444_p1();
    void thread_trunc_ln1001_fu_440_p1();
    void thread_trunc_ln1074_fu_255_p1();
    void thread_trunc_ln1083_fu_277_p1();
    void thread_trunc_ln990_fu_301_p1();
    void thread_trunc_ln994_fu_297_p1();
    void thread_x_V_fu_265_p1();
    void thread_xor_ln996_fu_370_p2();
    void thread_zext_ln1001_1_fu_430_p1();
    void thread_zext_ln1001_fu_415_p1();
    void thread_zext_ln994_fu_334_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
